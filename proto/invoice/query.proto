syntax = "proto3";
package stateset.core.invoice;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "invoice/invoice.proto";
// this line is used by starport scaffolding # 1
import "gogoproto/gogo.proto";

option go_package = "github.com/stateset/core/x/invoice/types";

// Query defines the gRPC querier service.
service Query {
    // Queries a invoice by id.
	rpc Invoice(QueryGetInvoiceRequest) returns (QueryGetInvoiceResponse) {
		option (google.api.http).get = "/stateset/core/invoice/invoice/{id}";
	}

	// Queries a list of invoice items.
	rpc InvoiceAll(QueryAllInvoiceRequest) returns (QueryAllInvoiceResponse) {
		option (google.api.http).get = "/stateset/core/invoice/invoice";
	}

// this line is used by starport scaffolding # 2
}

message QueryGetInvoiceRequest {
	uint64 id = 1;
}

message QueryGetInvoiceResponse {
	Invoice Invoice = 1 [(gogoproto.nullable) = false];
}

message QueryAllInvoiceRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllInvoiceResponse {
	repeated Invoice Invoice = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
