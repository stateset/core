syntax = "proto3";
package stateset.core.purchaseorder;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "purchaseorder/purchaseorder.proto";
// this line is used by starport scaffolding # 1
import "gogoproto/gogo.proto";

option go_package = "github.com/stateset/core/x/purchaseorder/types";

// Query defines the gRPC querier service.
service Query {
    // Queries a purchaseorder by id.
	rpc Purchaseorder(QueryGetPurchaseorderRequest) returns (QueryGetPurchaseorderResponse) {
		option (google.api.http).get = "/stateset/core/purchaseorder/purchaseorder/{id}";
	}

	// Queries a list of purchaseorder items.
	rpc PurchaseorderAll(QueryAllPurchaseorderRequest) returns (QueryAllPurchaseorderResponse) {
		option (google.api.http).get = "/stateset/core/purchaseorder/purchaseorder";
	}

// this line is used by starport scaffolding # 2
}

message QueryGetPurchaseorderRequest {
	uint64 id = 1;
}

message QueryGetPurchaseorderResponse {
	Purchaseorder Purchaseorder = 1 [(gogoproto.nullable) = false];
}

message QueryAllPurchaseorderRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPurchaseorderResponse {
	repeated Purchaseorder Purchaseorder = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
