syntax = "proto3";
package stateset.xss.v1beta1;

import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/stateset/core/x/xss/types";

// STSTParams defines the parameters for the STST staking token module
message STSTParams {
  // mint_denom is the denomination of the token being minted
  string mint_denom = 1;
  
  // max_supply is the maximum supply of XSS tokens
  string max_supply = 2 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  
  // initial_supply is the initial supply of XSS tokens at genesis
  string initial_supply = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  
  // staking_rewards_rate is the annual staking rewards rate
  string staking_rewards_rate = 4 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  
  // min_staking_amount is the minimum amount required for staking
  string min_staking_amount = 5 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  
  // unstaking_period is the period for unstaking tokens
  google.protobuf.Duration unstaking_period = 6 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true
  ];
  
  // slash_fraction_double_sign is the fraction slashed for double signing
  string slash_fraction_double_sign = 7 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  
  // slash_fraction_downtime is the fraction slashed for downtime
  string slash_fraction_downtime = 8 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  
  // governance_voting_period is the period for governance voting
  google.protobuf.Duration governance_voting_period = 9 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true
  ];
}

// STSTMinter represents the minting state for STST tokens
message STSTMinter {
  // epoch_provisions is the current epoch provisions
  string epoch_provisions = 1 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  
  // annual_provisions is the current annual provisions
  string annual_provisions = 2 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

// STSTStake represents a stake in the STST network
message STSTStake {
  // delegator_address is the address of the delegator
  string delegator_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  
  // validator_address is the address of the validator
  string validator_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  
  // shares is the amount of shares delegated
  string shares = 3 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  
  // tokens is the amount of tokens staked
  cosmos.base.v1beta1.Coin tokens = 4 [(gogoproto.nullable) = false];
  
  // creation_time is when the stake was created
  google.protobuf.Timestamp creation_time = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true
  ];
}

// STSTUnbondingDelegation represents an unbonding delegation
message STSTUnbondingDelegation {
  // delegator_address is the address of the delegator
  string delegator_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  
  // validator_address is the address of the validator
  string validator_address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  
  // entries are the unbonding delegation entries
  repeated STSTUnbondingDelegationEntry entries = 3 [(gogoproto.nullable) = false];
}

// STSTUnbondingDelegationEntry represents an entry in an unbonding delegation
message STSTUnbondingDelegationEntry {
  // creation_height is the height when the unbonding was initiated
  int64 creation_height = 1;
  
  // completion_time is when the unbonding will complete
  google.protobuf.Timestamp completion_time = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true
  ];
  
  // initial_balance is the initial balance of the unbonding
  string initial_balance = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  
  // balance is the current balance of the unbonding
  string balance = 4 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

// STSTValidator represents a validator in the STST network
message STSTValidator {
  // operator_address is the bech32 address of the validator's operator
  string operator_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  
  // consensus_pubkey is the consensus public key of the validator
  google.protobuf.Any consensus_pubkey = 2 [(cosmos_proto.accepts_interface) = "cosmos.crypto.PubKey"];
  
  // jailed defines whether the validator is jailed
  bool jailed = 3;
  
  // status is the validator status
  int32 status = 4;
  
  // tokens is the total tokens held by the validator
  string tokens = 5 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  
  // delegator_shares is the total shares of all delegators
  string delegator_shares = 6 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  
  // description is the validator description
  STSTValidatorDescription description = 7 [(gogoproto.nullable) = false];
  
  // unbonding_height is the height when the validator started unbonding
  int64 unbonding_height = 8;
  
  // unbonding_time is when the validator will complete unbonding
  google.protobuf.Timestamp unbonding_time = 9 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true
  ];
  
  // commission is the validator commission
  STSTCommission commission = 10 [(gogoproto.nullable) = false];
  
  // min_self_delegation is the minimum self delegation
  string min_self_delegation = 11 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
}

// STSTValidatorDescription defines the description for a validator
message STSTValidatorDescription {
  // moniker is the validator's name
  string moniker = 1;
  
  // identity is the optional identity signature
  string identity = 2;
  
  // website is the validator's website
  string website = 3;
  
  // security_contact is the validator's security contact
  string security_contact = 4;
  
  // details is the validator's details
  string details = 5;
}

// STSTCommission defines the commission rates for a validator
message STSTCommission {
  // commission_rates are the commission rates
  STSTCommissionRates commission_rates = 1 [(gogoproto.nullable) = false];
  
  // update_time is the last time the commission was updated
  google.protobuf.Timestamp update_time = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true
  ];
}

// STSTCommissionRates defines the commission rates for a validator
message STSTCommissionRates {
  // rate is the commission rate charged to delegators
  string rate = 1 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  
  // max_rate is the maximum commission rate
  string max_rate = 2 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  
  // max_change_rate is the maximum daily change rate
  string max_change_rate = 3 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

// STSTRewards represents staking rewards distribution
message STSTRewards {
  // validator_address is the address of the validator
  string validator_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  
  // rewards are the accumulated rewards
  repeated cosmos.base.v1beta1.DecCoin rewards = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins"
  ];
  
  // period is the rewards period
  uint64 period = 3;
}

// STSTSlashing represents slashing information
message STSTSlashing {
  // validator_address is the address of the validator
  string validator_address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  
  // infraction_height is the height of the infraction
  int64 infraction_height = 2;
  
  // power is the voting power at the time of infraction
  int64 power = 3;
  
  // slash_fraction is the fraction slashed
  string slash_fraction = 4 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  
  // slash_amount is the amount slashed
  string slash_amount = 5 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  
  // timestamp is when the slashing occurred
  google.protobuf.Timestamp timestamp = 6 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true
  ];
}