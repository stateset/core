// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: agreement/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgActivateAgreement struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgActivateAgreement) Reset()         { *m = MsgActivateAgreement{} }
func (m *MsgActivateAgreement) String() string { return proto.CompactTextString(m) }
func (*MsgActivateAgreement) ProtoMessage()    {}
func (*MsgActivateAgreement) Descriptor() ([]byte, []int) {
	return fileDescriptor_be6e9131a71dcf66, []int{0}
}
func (m *MsgActivateAgreement) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgActivateAgreement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgActivateAgreement.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgActivateAgreement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgActivateAgreement.Merge(m, src)
}
func (m *MsgActivateAgreement) XXX_Size() int {
	return m.Size()
}
func (m *MsgActivateAgreement) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgActivateAgreement.DiscardUnknown(m)
}

var xxx_messageInfo_MsgActivateAgreement proto.InternalMessageInfo

func (m *MsgActivateAgreement) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgActivateAgreement) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgActivateAgreementResponse struct {
}

func (m *MsgActivateAgreementResponse) Reset()         { *m = MsgActivateAgreementResponse{} }
func (m *MsgActivateAgreementResponse) String() string { return proto.CompactTextString(m) }
func (*MsgActivateAgreementResponse) ProtoMessage()    {}
func (*MsgActivateAgreementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_be6e9131a71dcf66, []int{1}
}
func (m *MsgActivateAgreementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgActivateAgreementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgActivateAgreementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgActivateAgreementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgActivateAgreementResponse.Merge(m, src)
}
func (m *MsgActivateAgreementResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgActivateAgreementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgActivateAgreementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgActivateAgreementResponse proto.InternalMessageInfo

type MsgExpireAgreement struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgExpireAgreement) Reset()         { *m = MsgExpireAgreement{} }
func (m *MsgExpireAgreement) String() string { return proto.CompactTextString(m) }
func (*MsgExpireAgreement) ProtoMessage()    {}
func (*MsgExpireAgreement) Descriptor() ([]byte, []int) {
	return fileDescriptor_be6e9131a71dcf66, []int{2}
}
func (m *MsgExpireAgreement) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgExpireAgreement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgExpireAgreement.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgExpireAgreement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgExpireAgreement.Merge(m, src)
}
func (m *MsgExpireAgreement) XXX_Size() int {
	return m.Size()
}
func (m *MsgExpireAgreement) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgExpireAgreement.DiscardUnknown(m)
}

var xxx_messageInfo_MsgExpireAgreement proto.InternalMessageInfo

func (m *MsgExpireAgreement) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgExpireAgreement) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgExpireAgreementResponse struct {
}

func (m *MsgExpireAgreementResponse) Reset()         { *m = MsgExpireAgreementResponse{} }
func (m *MsgExpireAgreementResponse) String() string { return proto.CompactTextString(m) }
func (*MsgExpireAgreementResponse) ProtoMessage()    {}
func (*MsgExpireAgreementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_be6e9131a71dcf66, []int{3}
}
func (m *MsgExpireAgreementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgExpireAgreementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgExpireAgreementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgExpireAgreementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgExpireAgreementResponse.Merge(m, src)
}
func (m *MsgExpireAgreementResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgExpireAgreementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgExpireAgreementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgExpireAgreementResponse proto.InternalMessageInfo

type MsgRenewAgreement struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgRenewAgreement) Reset()         { *m = MsgRenewAgreement{} }
func (m *MsgRenewAgreement) String() string { return proto.CompactTextString(m) }
func (*MsgRenewAgreement) ProtoMessage()    {}
func (*MsgRenewAgreement) Descriptor() ([]byte, []int) {
	return fileDescriptor_be6e9131a71dcf66, []int{4}
}
func (m *MsgRenewAgreement) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRenewAgreement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRenewAgreement.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRenewAgreement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRenewAgreement.Merge(m, src)
}
func (m *MsgRenewAgreement) XXX_Size() int {
	return m.Size()
}
func (m *MsgRenewAgreement) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRenewAgreement.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRenewAgreement proto.InternalMessageInfo

func (m *MsgRenewAgreement) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRenewAgreement) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgRenewAgreementResponse struct {
}

func (m *MsgRenewAgreementResponse) Reset()         { *m = MsgRenewAgreementResponse{} }
func (m *MsgRenewAgreementResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRenewAgreementResponse) ProtoMessage()    {}
func (*MsgRenewAgreementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_be6e9131a71dcf66, []int{5}
}
func (m *MsgRenewAgreementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRenewAgreementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRenewAgreementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRenewAgreementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRenewAgreementResponse.Merge(m, src)
}
func (m *MsgRenewAgreementResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRenewAgreementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRenewAgreementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRenewAgreementResponse proto.InternalMessageInfo

type MsgTerminateAgreement struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgTerminateAgreement) Reset()         { *m = MsgTerminateAgreement{} }
func (m *MsgTerminateAgreement) String() string { return proto.CompactTextString(m) }
func (*MsgTerminateAgreement) ProtoMessage()    {}
func (*MsgTerminateAgreement) Descriptor() ([]byte, []int) {
	return fileDescriptor_be6e9131a71dcf66, []int{6}
}
func (m *MsgTerminateAgreement) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTerminateAgreement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTerminateAgreement.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTerminateAgreement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTerminateAgreement.Merge(m, src)
}
func (m *MsgTerminateAgreement) XXX_Size() int {
	return m.Size()
}
func (m *MsgTerminateAgreement) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTerminateAgreement.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTerminateAgreement proto.InternalMessageInfo

func (m *MsgTerminateAgreement) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgTerminateAgreement) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgTerminateAgreementResponse struct {
}

func (m *MsgTerminateAgreementResponse) Reset()         { *m = MsgTerminateAgreementResponse{} }
func (m *MsgTerminateAgreementResponse) String() string { return proto.CompactTextString(m) }
func (*MsgTerminateAgreementResponse) ProtoMessage()    {}
func (*MsgTerminateAgreementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_be6e9131a71dcf66, []int{7}
}
func (m *MsgTerminateAgreementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgTerminateAgreementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgTerminateAgreementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgTerminateAgreementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgTerminateAgreementResponse.Merge(m, src)
}
func (m *MsgTerminateAgreementResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgTerminateAgreementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgTerminateAgreementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgTerminateAgreementResponse proto.InternalMessageInfo

type MsgCreateSentAgreement struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Did     string `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	Chain   string `protobuf:"bytes,3,opt,name=chain,proto3" json:"chain,omitempty"`
}

func (m *MsgCreateSentAgreement) Reset()         { *m = MsgCreateSentAgreement{} }
func (m *MsgCreateSentAgreement) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSentAgreement) ProtoMessage()    {}
func (*MsgCreateSentAgreement) Descriptor() ([]byte, []int) {
	return fileDescriptor_be6e9131a71dcf66, []int{8}
}
func (m *MsgCreateSentAgreement) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSentAgreement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSentAgreement.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSentAgreement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSentAgreement.Merge(m, src)
}
func (m *MsgCreateSentAgreement) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSentAgreement) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSentAgreement.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSentAgreement proto.InternalMessageInfo

func (m *MsgCreateSentAgreement) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateSentAgreement) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *MsgCreateSentAgreement) GetChain() string {
	if m != nil {
		return m.Chain
	}
	return ""
}

type MsgCreateSentAgreementResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateSentAgreementResponse) Reset()         { *m = MsgCreateSentAgreementResponse{} }
func (m *MsgCreateSentAgreementResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSentAgreementResponse) ProtoMessage()    {}
func (*MsgCreateSentAgreementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_be6e9131a71dcf66, []int{9}
}
func (m *MsgCreateSentAgreementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSentAgreementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSentAgreementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSentAgreementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSentAgreementResponse.Merge(m, src)
}
func (m *MsgCreateSentAgreementResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSentAgreementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSentAgreementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSentAgreementResponse proto.InternalMessageInfo

func (m *MsgCreateSentAgreementResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateSentAgreement struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Did     string `protobuf:"bytes,3,opt,name=did,proto3" json:"did,omitempty"`
	Chain   string `protobuf:"bytes,4,opt,name=chain,proto3" json:"chain,omitempty"`
}

func (m *MsgUpdateSentAgreement) Reset()         { *m = MsgUpdateSentAgreement{} }
func (m *MsgUpdateSentAgreement) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSentAgreement) ProtoMessage()    {}
func (*MsgUpdateSentAgreement) Descriptor() ([]byte, []int) {
	return fileDescriptor_be6e9131a71dcf66, []int{10}
}
func (m *MsgUpdateSentAgreement) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSentAgreement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSentAgreement.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSentAgreement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSentAgreement.Merge(m, src)
}
func (m *MsgUpdateSentAgreement) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSentAgreement) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSentAgreement.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSentAgreement proto.InternalMessageInfo

func (m *MsgUpdateSentAgreement) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateSentAgreement) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateSentAgreement) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *MsgUpdateSentAgreement) GetChain() string {
	if m != nil {
		return m.Chain
	}
	return ""
}

type MsgUpdateSentAgreementResponse struct {
}

func (m *MsgUpdateSentAgreementResponse) Reset()         { *m = MsgUpdateSentAgreementResponse{} }
func (m *MsgUpdateSentAgreementResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSentAgreementResponse) ProtoMessage()    {}
func (*MsgUpdateSentAgreementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_be6e9131a71dcf66, []int{11}
}
func (m *MsgUpdateSentAgreementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSentAgreementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSentAgreementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSentAgreementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSentAgreementResponse.Merge(m, src)
}
func (m *MsgUpdateSentAgreementResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSentAgreementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSentAgreementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSentAgreementResponse proto.InternalMessageInfo

type MsgDeleteSentAgreement struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteSentAgreement) Reset()         { *m = MsgDeleteSentAgreement{} }
func (m *MsgDeleteSentAgreement) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSentAgreement) ProtoMessage()    {}
func (*MsgDeleteSentAgreement) Descriptor() ([]byte, []int) {
	return fileDescriptor_be6e9131a71dcf66, []int{12}
}
func (m *MsgDeleteSentAgreement) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSentAgreement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSentAgreement.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSentAgreement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSentAgreement.Merge(m, src)
}
func (m *MsgDeleteSentAgreement) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSentAgreement) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSentAgreement.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSentAgreement proto.InternalMessageInfo

func (m *MsgDeleteSentAgreement) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteSentAgreement) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteSentAgreementResponse struct {
}

func (m *MsgDeleteSentAgreementResponse) Reset()         { *m = MsgDeleteSentAgreementResponse{} }
func (m *MsgDeleteSentAgreementResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSentAgreementResponse) ProtoMessage()    {}
func (*MsgDeleteSentAgreementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_be6e9131a71dcf66, []int{13}
}
func (m *MsgDeleteSentAgreementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSentAgreementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSentAgreementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSentAgreementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSentAgreementResponse.Merge(m, src)
}
func (m *MsgDeleteSentAgreementResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSentAgreementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSentAgreementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSentAgreementResponse proto.InternalMessageInfo

type MsgCreateTimedoutAgreement struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Did     string `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	Chain   string `protobuf:"bytes,3,opt,name=chain,proto3" json:"chain,omitempty"`
}

func (m *MsgCreateTimedoutAgreement) Reset()         { *m = MsgCreateTimedoutAgreement{} }
func (m *MsgCreateTimedoutAgreement) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTimedoutAgreement) ProtoMessage()    {}
func (*MsgCreateTimedoutAgreement) Descriptor() ([]byte, []int) {
	return fileDescriptor_be6e9131a71dcf66, []int{14}
}
func (m *MsgCreateTimedoutAgreement) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTimedoutAgreement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTimedoutAgreement.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTimedoutAgreement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTimedoutAgreement.Merge(m, src)
}
func (m *MsgCreateTimedoutAgreement) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTimedoutAgreement) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTimedoutAgreement.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTimedoutAgreement proto.InternalMessageInfo

func (m *MsgCreateTimedoutAgreement) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateTimedoutAgreement) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *MsgCreateTimedoutAgreement) GetChain() string {
	if m != nil {
		return m.Chain
	}
	return ""
}

type MsgCreateTimedoutAgreementResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateTimedoutAgreementResponse) Reset()         { *m = MsgCreateTimedoutAgreementResponse{} }
func (m *MsgCreateTimedoutAgreementResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTimedoutAgreementResponse) ProtoMessage()    {}
func (*MsgCreateTimedoutAgreementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_be6e9131a71dcf66, []int{15}
}
func (m *MsgCreateTimedoutAgreementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTimedoutAgreementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTimedoutAgreementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTimedoutAgreementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTimedoutAgreementResponse.Merge(m, src)
}
func (m *MsgCreateTimedoutAgreementResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTimedoutAgreementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTimedoutAgreementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTimedoutAgreementResponse proto.InternalMessageInfo

func (m *MsgCreateTimedoutAgreementResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateTimedoutAgreement struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Did     string `protobuf:"bytes,3,opt,name=did,proto3" json:"did,omitempty"`
	Chain   string `protobuf:"bytes,4,opt,name=chain,proto3" json:"chain,omitempty"`
}

func (m *MsgUpdateTimedoutAgreement) Reset()         { *m = MsgUpdateTimedoutAgreement{} }
func (m *MsgUpdateTimedoutAgreement) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTimedoutAgreement) ProtoMessage()    {}
func (*MsgUpdateTimedoutAgreement) Descriptor() ([]byte, []int) {
	return fileDescriptor_be6e9131a71dcf66, []int{16}
}
func (m *MsgUpdateTimedoutAgreement) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTimedoutAgreement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTimedoutAgreement.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTimedoutAgreement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTimedoutAgreement.Merge(m, src)
}
func (m *MsgUpdateTimedoutAgreement) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTimedoutAgreement) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTimedoutAgreement.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTimedoutAgreement proto.InternalMessageInfo

func (m *MsgUpdateTimedoutAgreement) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateTimedoutAgreement) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateTimedoutAgreement) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *MsgUpdateTimedoutAgreement) GetChain() string {
	if m != nil {
		return m.Chain
	}
	return ""
}

type MsgUpdateTimedoutAgreementResponse struct {
}

func (m *MsgUpdateTimedoutAgreementResponse) Reset()         { *m = MsgUpdateTimedoutAgreementResponse{} }
func (m *MsgUpdateTimedoutAgreementResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTimedoutAgreementResponse) ProtoMessage()    {}
func (*MsgUpdateTimedoutAgreementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_be6e9131a71dcf66, []int{17}
}
func (m *MsgUpdateTimedoutAgreementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTimedoutAgreementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTimedoutAgreementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTimedoutAgreementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTimedoutAgreementResponse.Merge(m, src)
}
func (m *MsgUpdateTimedoutAgreementResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTimedoutAgreementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTimedoutAgreementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTimedoutAgreementResponse proto.InternalMessageInfo

type MsgDeleteTimedoutAgreement struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteTimedoutAgreement) Reset()         { *m = MsgDeleteTimedoutAgreement{} }
func (m *MsgDeleteTimedoutAgreement) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTimedoutAgreement) ProtoMessage()    {}
func (*MsgDeleteTimedoutAgreement) Descriptor() ([]byte, []int) {
	return fileDescriptor_be6e9131a71dcf66, []int{18}
}
func (m *MsgDeleteTimedoutAgreement) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTimedoutAgreement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTimedoutAgreement.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTimedoutAgreement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTimedoutAgreement.Merge(m, src)
}
func (m *MsgDeleteTimedoutAgreement) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTimedoutAgreement) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTimedoutAgreement.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTimedoutAgreement proto.InternalMessageInfo

func (m *MsgDeleteTimedoutAgreement) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteTimedoutAgreement) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteTimedoutAgreementResponse struct {
}

func (m *MsgDeleteTimedoutAgreementResponse) Reset()         { *m = MsgDeleteTimedoutAgreementResponse{} }
func (m *MsgDeleteTimedoutAgreementResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTimedoutAgreementResponse) ProtoMessage()    {}
func (*MsgDeleteTimedoutAgreementResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_be6e9131a71dcf66, []int{19}
}
func (m *MsgDeleteTimedoutAgreementResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTimedoutAgreementResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTimedoutAgreementResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTimedoutAgreementResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTimedoutAgreementResponse.Merge(m, src)
}
func (m *MsgDeleteTimedoutAgreementResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTimedoutAgreementResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTimedoutAgreementResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTimedoutAgreementResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgActivateAgreement)(nil), "stateset.core.agreement.MsgActivateAgreement")
	proto.RegisterType((*MsgActivateAgreementResponse)(nil), "stateset.core.agreement.MsgActivateAgreementResponse")
	proto.RegisterType((*MsgExpireAgreement)(nil), "stateset.core.agreement.MsgExpireAgreement")
	proto.RegisterType((*MsgExpireAgreementResponse)(nil), "stateset.core.agreement.MsgExpireAgreementResponse")
	proto.RegisterType((*MsgRenewAgreement)(nil), "stateset.core.agreement.MsgRenewAgreement")
	proto.RegisterType((*MsgRenewAgreementResponse)(nil), "stateset.core.agreement.MsgRenewAgreementResponse")
	proto.RegisterType((*MsgTerminateAgreement)(nil), "stateset.core.agreement.MsgTerminateAgreement")
	proto.RegisterType((*MsgTerminateAgreementResponse)(nil), "stateset.core.agreement.MsgTerminateAgreementResponse")
	proto.RegisterType((*MsgCreateSentAgreement)(nil), "stateset.core.agreement.MsgCreateSentAgreement")
	proto.RegisterType((*MsgCreateSentAgreementResponse)(nil), "stateset.core.agreement.MsgCreateSentAgreementResponse")
	proto.RegisterType((*MsgUpdateSentAgreement)(nil), "stateset.core.agreement.MsgUpdateSentAgreement")
	proto.RegisterType((*MsgUpdateSentAgreementResponse)(nil), "stateset.core.agreement.MsgUpdateSentAgreementResponse")
	proto.RegisterType((*MsgDeleteSentAgreement)(nil), "stateset.core.agreement.MsgDeleteSentAgreement")
	proto.RegisterType((*MsgDeleteSentAgreementResponse)(nil), "stateset.core.agreement.MsgDeleteSentAgreementResponse")
	proto.RegisterType((*MsgCreateTimedoutAgreement)(nil), "stateset.core.agreement.MsgCreateTimedoutAgreement")
	proto.RegisterType((*MsgCreateTimedoutAgreementResponse)(nil), "stateset.core.agreement.MsgCreateTimedoutAgreementResponse")
	proto.RegisterType((*MsgUpdateTimedoutAgreement)(nil), "stateset.core.agreement.MsgUpdateTimedoutAgreement")
	proto.RegisterType((*MsgUpdateTimedoutAgreementResponse)(nil), "stateset.core.agreement.MsgUpdateTimedoutAgreementResponse")
	proto.RegisterType((*MsgDeleteTimedoutAgreement)(nil), "stateset.core.agreement.MsgDeleteTimedoutAgreement")
	proto.RegisterType((*MsgDeleteTimedoutAgreementResponse)(nil), "stateset.core.agreement.MsgDeleteTimedoutAgreementResponse")
}

func init() { proto.RegisterFile("agreement/tx.proto", fileDescriptor_be6e9131a71dcf66) }

var fileDescriptor_be6e9131a71dcf66 = []byte{
	// 587 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x96, 0xcf, 0x6e, 0xd3, 0x4c,
	0x14, 0xc5, 0xe3, 0xa4, 0xdf, 0x87, 0x7a, 0x17, 0x85, 0x9a, 0x42, 0x83, 0x29, 0x26, 0xb2, 0x58,
	0x54, 0x45, 0xd8, 0xa8, 0xe1, 0xcf, 0x02, 0x81, 0x48, 0x29, 0xec, 0xbc, 0x31, 0x65, 0xd3, 0x05,
	0xc8, 0xb5, 0xaf, 0x5c, 0x23, 0x62, 0x5b, 0x9e, 0x29, 0xa4, 0x12, 0x12, 0x0f, 0xc0, 0x06, 0xf1,
	0x54, 0x2c, 0xbb, 0x64, 0x89, 0x92, 0x17, 0x41, 0x19, 0xdb, 0x43, 0x1a, 0x8f, 0xc7, 0xb5, 0x61,
	0x97, 0x49, 0xee, 0x39, 0xe7, 0x97, 0x3b, 0xc9, 0x91, 0x41, 0x75, 0x83, 0x14, 0x71, 0x8c, 0x11,
	0xb5, 0xe8, 0xc4, 0x4c, 0xd2, 0x98, 0xc6, 0xea, 0x26, 0xa1, 0x2e, 0x45, 0x82, 0xd4, 0xf4, 0xe2,
	0x14, 0x4d, 0x3e, 0xa1, 0xe9, 0x7f, 0x86, 0x09, 0x46, 0xf4, 0x1d, 0x3f, 0x66, 0x42, 0xcd, 0x58,
	0x30, 0x0b, 0xc7, 0xe8, 0xc7, 0x27, 0xa5, 0x19, 0xe3, 0x39, 0x6c, 0xd8, 0x24, 0x18, 0x79, 0x34,
	0xfc, 0xe8, 0x52, 0x1c, 0x15, 0x9f, 0xaa, 0x7d, 0xb8, 0xe4, 0xa5, 0xe8, 0xd2, 0x38, 0xed, 0x2b,
	0x03, 0x65, 0x7b, 0xd5, 0x29, 0x8e, 0xea, 0x1a, 0x74, 0x43, 0xbf, 0xdf, 0x1d, 0x28, 0xdb, 0x2b,
	0x4e, 0x37, 0xf4, 0x0d, 0x1d, 0xb6, 0x44, 0x0e, 0x0e, 0x92, 0x24, 0x8e, 0x08, 0x1a, 0xcf, 0x40,
	0xb5, 0x49, 0xf0, 0x72, 0x92, 0x84, 0x69, 0x2b, 0xff, 0x2d, 0xd0, 0xca, 0x7a, 0xee, 0xfe, 0x14,
	0xd6, 0x6d, 0x12, 0x38, 0x18, 0xe1, 0xa7, 0x36, 0xe6, 0x37, 0xe1, 0x46, 0x49, 0xce, 0xbd, 0x47,
	0x70, 0xcd, 0x26, 0xc1, 0x01, 0xa6, 0xe3, 0x30, 0x6a, 0xb9, 0x9c, 0xdb, 0x70, 0x4b, 0x68, 0xc1,
	0x33, 0x0e, 0xe1, 0xba, 0x4d, 0x82, 0x17, 0x73, 0x39, 0xbe, 0xc6, 0x88, 0x5e, 0x24, 0xe4, 0x0a,
	0xf4, 0xfc, 0x3c, 0x65, 0xd5, 0x99, 0xbf, 0x54, 0x37, 0xe0, 0x3f, 0xef, 0xd8, 0x0d, 0xa3, 0x7e,
	0x8f, 0xbd, 0x97, 0x1d, 0x8c, 0xfb, 0xa0, 0x8b, 0xbd, 0x8b, 0xf4, 0x1c, 0x57, 0xe1, 0xb8, 0xef,
	0x19, 0xcd, 0x9b, 0xc4, 0x6f, 0x40, 0xb3, 0xf4, 0x95, 0x0b, 0xba, 0x9e, 0x80, 0x6e, 0x65, 0x91,
	0x6e, 0xc0, 0xe8, 0x04, 0x59, 0x7c, 0x37, 0x7b, 0x8c, 0x66, 0x1f, 0x3f, 0x60, 0x6b, 0x9a, 0x3c,
	0x45, 0xe0, 0xc1, 0x53, 0xde, 0xb2, 0xdf, 0x57, 0xb6, 0xa5, 0x83, 0xfc, 0x6f, 0xf2, 0x2f, 0x6f,
	0xe1, 0x01, 0x18, 0xd5, 0xfe, 0x95, 0x37, 0x11, 0x31, 0xaa, 0x6c, 0x3b, 0x4d, 0xa8, 0xda, 0xde,
	0xc6, 0x1d, 0x46, 0x59, 0x91, 0xc7, 0x77, 0xf5, 0x8a, 0x51, 0x65, 0xdb, 0xfc, 0x0b, 0xaa, 0x3c,
	0xad, 0xc2, 0xa7, 0x48, 0xdb, 0xfd, 0x0e, 0xd0, 0xb3, 0x49, 0xa0, 0x9e, 0xc2, 0x7a, 0xb9, 0xa0,
	0xee, 0x99, 0x15, 0xb5, 0x68, 0x8a, 0xda, 0x48, 0x7b, 0xd8, 0x68, 0x9c, 0x5f, 0x0b, 0x81, 0xcb,
	0xcb, 0xcd, 0x75, 0x57, 0xe6, 0xb4, 0x34, 0xac, 0x0d, 0x1b, 0x0c, 0xf3, 0xd0, 0x04, 0xd6, 0x96,
	0x0a, 0x6d, 0x47, 0x66, 0x73, 0x7e, 0x56, 0xdb, 0xbd, 0xf8, 0x2c, 0x4f, 0xfc, 0x0c, 0xaa, 0xa0,
	0xe6, 0x4c, 0x99, 0x53, 0x79, 0x5e, 0x7b, 0xd4, 0x6c, 0x9e, 0xa7, 0x7f, 0x81, 0xab, 0xa2, 0x02,
	0xb4, 0x64, 0x76, 0x02, 0x81, 0xf6, 0xb8, 0xa1, 0x60, 0x11, 0x40, 0xd4, 0x79, 0x52, 0x00, 0x81,
	0x40, 0x0e, 0x20, 0x69, 0xba, 0x39, 0x80, 0xa8, 0xe6, 0xa4, 0x00, 0x02, 0x81, 0x1c, 0x40, 0x52,
	0x82, 0xea, 0x57, 0x05, 0x36, 0xab, 0x2a, 0x70, 0x58, 0xbf, 0xd6, 0x92, 0x48, 0x7b, 0xd2, 0x42,
	0x74, 0x8e, 0xa6, 0xaa, 0xfa, 0x86, 0xf5, 0x3b, 0x6e, 0x48, 0x53, 0x53, 0x7a, 0x8c, 0xa6, 0xaa,
	0xf2, 0x86, 0xf5, 0x0b, 0x6f, 0x48, 0x53, 0x53, 0x8a, 0x7b, 0xfb, 0x3f, 0xa6, 0xba, 0x72, 0x36,
	0xd5, 0x95, 0x5f, 0x53, 0x5d, 0xf9, 0x36, 0xd3, 0x3b, 0x67, 0x33, 0xbd, 0xf3, 0x73, 0xa6, 0x77,
	0x0e, 0x77, 0x82, 0x90, 0x1e, 0x9f, 0x1c, 0x99, 0x5e, 0x3c, 0xb6, 0x8a, 0x00, 0x6b, 0x1e, 0x60,
	0x4d, 0xac, 0x85, 0x27, 0xc1, 0xd3, 0x04, 0xc9, 0xd1, 0xff, 0xec, 0xe9, 0x6f, 0xf8, 0x3b, 0x00,
	0x00, 0xff, 0xff, 0x63, 0xa7, 0x6e, 0x80, 0x70, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	ActivateAgreement(ctx context.Context, in *MsgActivateAgreement, opts ...grpc.CallOption) (*MsgActivateAgreementResponse, error)
	ExpireAgreement(ctx context.Context, in *MsgExpireAgreement, opts ...grpc.CallOption) (*MsgExpireAgreementResponse, error)
	RenewAgreement(ctx context.Context, in *MsgRenewAgreement, opts ...grpc.CallOption) (*MsgRenewAgreementResponse, error)
	TerminateAgreement(ctx context.Context, in *MsgTerminateAgreement, opts ...grpc.CallOption) (*MsgTerminateAgreementResponse, error)
	CreateSentAgreement(ctx context.Context, in *MsgCreateSentAgreement, opts ...grpc.CallOption) (*MsgCreateSentAgreementResponse, error)
	UpdateSentAgreement(ctx context.Context, in *MsgUpdateSentAgreement, opts ...grpc.CallOption) (*MsgUpdateSentAgreementResponse, error)
	DeleteSentAgreement(ctx context.Context, in *MsgDeleteSentAgreement, opts ...grpc.CallOption) (*MsgDeleteSentAgreementResponse, error)
	CreateTimedoutAgreement(ctx context.Context, in *MsgCreateTimedoutAgreement, opts ...grpc.CallOption) (*MsgCreateTimedoutAgreementResponse, error)
	UpdateTimedoutAgreement(ctx context.Context, in *MsgUpdateTimedoutAgreement, opts ...grpc.CallOption) (*MsgUpdateTimedoutAgreementResponse, error)
	DeleteTimedoutAgreement(ctx context.Context, in *MsgDeleteTimedoutAgreement, opts ...grpc.CallOption) (*MsgDeleteTimedoutAgreementResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) ActivateAgreement(ctx context.Context, in *MsgActivateAgreement, opts ...grpc.CallOption) (*MsgActivateAgreementResponse, error) {
	out := new(MsgActivateAgreementResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.agreement.Msg/ActivateAgreement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ExpireAgreement(ctx context.Context, in *MsgExpireAgreement, opts ...grpc.CallOption) (*MsgExpireAgreementResponse, error) {
	out := new(MsgExpireAgreementResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.agreement.Msg/ExpireAgreement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RenewAgreement(ctx context.Context, in *MsgRenewAgreement, opts ...grpc.CallOption) (*MsgRenewAgreementResponse, error) {
	out := new(MsgRenewAgreementResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.agreement.Msg/RenewAgreement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) TerminateAgreement(ctx context.Context, in *MsgTerminateAgreement, opts ...grpc.CallOption) (*MsgTerminateAgreementResponse, error) {
	out := new(MsgTerminateAgreementResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.agreement.Msg/TerminateAgreement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateSentAgreement(ctx context.Context, in *MsgCreateSentAgreement, opts ...grpc.CallOption) (*MsgCreateSentAgreementResponse, error) {
	out := new(MsgCreateSentAgreementResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.agreement.Msg/CreateSentAgreement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateSentAgreement(ctx context.Context, in *MsgUpdateSentAgreement, opts ...grpc.CallOption) (*MsgUpdateSentAgreementResponse, error) {
	out := new(MsgUpdateSentAgreementResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.agreement.Msg/UpdateSentAgreement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteSentAgreement(ctx context.Context, in *MsgDeleteSentAgreement, opts ...grpc.CallOption) (*MsgDeleteSentAgreementResponse, error) {
	out := new(MsgDeleteSentAgreementResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.agreement.Msg/DeleteSentAgreement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateTimedoutAgreement(ctx context.Context, in *MsgCreateTimedoutAgreement, opts ...grpc.CallOption) (*MsgCreateTimedoutAgreementResponse, error) {
	out := new(MsgCreateTimedoutAgreementResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.agreement.Msg/CreateTimedoutAgreement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateTimedoutAgreement(ctx context.Context, in *MsgUpdateTimedoutAgreement, opts ...grpc.CallOption) (*MsgUpdateTimedoutAgreementResponse, error) {
	out := new(MsgUpdateTimedoutAgreementResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.agreement.Msg/UpdateTimedoutAgreement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteTimedoutAgreement(ctx context.Context, in *MsgDeleteTimedoutAgreement, opts ...grpc.CallOption) (*MsgDeleteTimedoutAgreementResponse, error) {
	out := new(MsgDeleteTimedoutAgreementResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.agreement.Msg/DeleteTimedoutAgreement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	ActivateAgreement(context.Context, *MsgActivateAgreement) (*MsgActivateAgreementResponse, error)
	ExpireAgreement(context.Context, *MsgExpireAgreement) (*MsgExpireAgreementResponse, error)
	RenewAgreement(context.Context, *MsgRenewAgreement) (*MsgRenewAgreementResponse, error)
	TerminateAgreement(context.Context, *MsgTerminateAgreement) (*MsgTerminateAgreementResponse, error)
	CreateSentAgreement(context.Context, *MsgCreateSentAgreement) (*MsgCreateSentAgreementResponse, error)
	UpdateSentAgreement(context.Context, *MsgUpdateSentAgreement) (*MsgUpdateSentAgreementResponse, error)
	DeleteSentAgreement(context.Context, *MsgDeleteSentAgreement) (*MsgDeleteSentAgreementResponse, error)
	CreateTimedoutAgreement(context.Context, *MsgCreateTimedoutAgreement) (*MsgCreateTimedoutAgreementResponse, error)
	UpdateTimedoutAgreement(context.Context, *MsgUpdateTimedoutAgreement) (*MsgUpdateTimedoutAgreementResponse, error)
	DeleteTimedoutAgreement(context.Context, *MsgDeleteTimedoutAgreement) (*MsgDeleteTimedoutAgreementResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) ActivateAgreement(ctx context.Context, req *MsgActivateAgreement) (*MsgActivateAgreementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActivateAgreement not implemented")
}
func (*UnimplementedMsgServer) ExpireAgreement(ctx context.Context, req *MsgExpireAgreement) (*MsgExpireAgreementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExpireAgreement not implemented")
}
func (*UnimplementedMsgServer) RenewAgreement(ctx context.Context, req *MsgRenewAgreement) (*MsgRenewAgreementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RenewAgreement not implemented")
}
func (*UnimplementedMsgServer) TerminateAgreement(ctx context.Context, req *MsgTerminateAgreement) (*MsgTerminateAgreementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TerminateAgreement not implemented")
}
func (*UnimplementedMsgServer) CreateSentAgreement(ctx context.Context, req *MsgCreateSentAgreement) (*MsgCreateSentAgreementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSentAgreement not implemented")
}
func (*UnimplementedMsgServer) UpdateSentAgreement(ctx context.Context, req *MsgUpdateSentAgreement) (*MsgUpdateSentAgreementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSentAgreement not implemented")
}
func (*UnimplementedMsgServer) DeleteSentAgreement(ctx context.Context, req *MsgDeleteSentAgreement) (*MsgDeleteSentAgreementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSentAgreement not implemented")
}
func (*UnimplementedMsgServer) CreateTimedoutAgreement(ctx context.Context, req *MsgCreateTimedoutAgreement) (*MsgCreateTimedoutAgreementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTimedoutAgreement not implemented")
}
func (*UnimplementedMsgServer) UpdateTimedoutAgreement(ctx context.Context, req *MsgUpdateTimedoutAgreement) (*MsgUpdateTimedoutAgreementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTimedoutAgreement not implemented")
}
func (*UnimplementedMsgServer) DeleteTimedoutAgreement(ctx context.Context, req *MsgDeleteTimedoutAgreement) (*MsgDeleteTimedoutAgreementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTimedoutAgreement not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_ActivateAgreement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgActivateAgreement)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ActivateAgreement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.agreement.Msg/ActivateAgreement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ActivateAgreement(ctx, req.(*MsgActivateAgreement))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ExpireAgreement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgExpireAgreement)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ExpireAgreement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.agreement.Msg/ExpireAgreement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ExpireAgreement(ctx, req.(*MsgExpireAgreement))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RenewAgreement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRenewAgreement)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RenewAgreement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.agreement.Msg/RenewAgreement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RenewAgreement(ctx, req.(*MsgRenewAgreement))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_TerminateAgreement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgTerminateAgreement)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).TerminateAgreement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.agreement.Msg/TerminateAgreement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).TerminateAgreement(ctx, req.(*MsgTerminateAgreement))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateSentAgreement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSentAgreement)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSentAgreement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.agreement.Msg/CreateSentAgreement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSentAgreement(ctx, req.(*MsgCreateSentAgreement))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateSentAgreement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateSentAgreement)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateSentAgreement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.agreement.Msg/UpdateSentAgreement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateSentAgreement(ctx, req.(*MsgUpdateSentAgreement))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteSentAgreement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteSentAgreement)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteSentAgreement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.agreement.Msg/DeleteSentAgreement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteSentAgreement(ctx, req.(*MsgDeleteSentAgreement))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateTimedoutAgreement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTimedoutAgreement)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTimedoutAgreement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.agreement.Msg/CreateTimedoutAgreement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTimedoutAgreement(ctx, req.(*MsgCreateTimedoutAgreement))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateTimedoutAgreement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateTimedoutAgreement)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateTimedoutAgreement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.agreement.Msg/UpdateTimedoutAgreement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateTimedoutAgreement(ctx, req.(*MsgUpdateTimedoutAgreement))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteTimedoutAgreement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteTimedoutAgreement)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteTimedoutAgreement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.agreement.Msg/DeleteTimedoutAgreement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteTimedoutAgreement(ctx, req.(*MsgDeleteTimedoutAgreement))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stateset.core.agreement.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ActivateAgreement",
			Handler:    _Msg_ActivateAgreement_Handler,
		},
		{
			MethodName: "ExpireAgreement",
			Handler:    _Msg_ExpireAgreement_Handler,
		},
		{
			MethodName: "RenewAgreement",
			Handler:    _Msg_RenewAgreement_Handler,
		},
		{
			MethodName: "TerminateAgreement",
			Handler:    _Msg_TerminateAgreement_Handler,
		},
		{
			MethodName: "CreateSentAgreement",
			Handler:    _Msg_CreateSentAgreement_Handler,
		},
		{
			MethodName: "UpdateSentAgreement",
			Handler:    _Msg_UpdateSentAgreement_Handler,
		},
		{
			MethodName: "DeleteSentAgreement",
			Handler:    _Msg_DeleteSentAgreement_Handler,
		},
		{
			MethodName: "CreateTimedoutAgreement",
			Handler:    _Msg_CreateTimedoutAgreement_Handler,
		},
		{
			MethodName: "UpdateTimedoutAgreement",
			Handler:    _Msg_UpdateTimedoutAgreement_Handler,
		},
		{
			MethodName: "DeleteTimedoutAgreement",
			Handler:    _Msg_DeleteTimedoutAgreement_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "agreement/tx.proto",
}

func (m *MsgActivateAgreement) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgActivateAgreement) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgActivateAgreement) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgActivateAgreementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgActivateAgreementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgActivateAgreementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgExpireAgreement) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgExpireAgreement) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgExpireAgreement) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgExpireAgreementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgExpireAgreementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgExpireAgreementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRenewAgreement) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRenewAgreement) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRenewAgreement) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRenewAgreementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRenewAgreementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRenewAgreementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgTerminateAgreement) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTerminateAgreement) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTerminateAgreement) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgTerminateAgreementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgTerminateAgreementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgTerminateAgreementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateSentAgreement) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSentAgreement) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSentAgreement) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Chain) > 0 {
		i -= len(m.Chain)
		copy(dAtA[i:], m.Chain)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Chain)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSentAgreementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSentAgreementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSentAgreementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSentAgreement) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSentAgreement) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSentAgreement) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Chain) > 0 {
		i -= len(m.Chain)
		copy(dAtA[i:], m.Chain)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Chain)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSentAgreementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSentAgreementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSentAgreementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSentAgreement) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSentAgreement) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSentAgreement) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSentAgreementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSentAgreementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSentAgreementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateTimedoutAgreement) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTimedoutAgreement) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTimedoutAgreement) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Chain) > 0 {
		i -= len(m.Chain)
		copy(dAtA[i:], m.Chain)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Chain)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTimedoutAgreementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTimedoutAgreementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTimedoutAgreementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTimedoutAgreement) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTimedoutAgreement) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTimedoutAgreement) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Chain) > 0 {
		i -= len(m.Chain)
		copy(dAtA[i:], m.Chain)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Chain)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTimedoutAgreementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTimedoutAgreementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTimedoutAgreementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTimedoutAgreement) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTimedoutAgreement) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTimedoutAgreement) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTimedoutAgreementResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTimedoutAgreementResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTimedoutAgreementResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgActivateAgreement) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgActivateAgreementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgExpireAgreement) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgExpireAgreementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRenewAgreement) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgRenewAgreementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgTerminateAgreement) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgTerminateAgreementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateSentAgreement) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Chain)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateSentAgreementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateSentAgreement) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Chain)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateSentAgreementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteSentAgreement) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteSentAgreementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateTimedoutAgreement) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Chain)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTimedoutAgreementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateTimedoutAgreement) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Chain)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateTimedoutAgreementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteTimedoutAgreement) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteTimedoutAgreementResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgActivateAgreement) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgActivateAgreement: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgActivateAgreement: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgActivateAgreementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgActivateAgreementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgActivateAgreementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgExpireAgreement) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgExpireAgreement: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgExpireAgreement: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgExpireAgreementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgExpireAgreementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgExpireAgreementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRenewAgreement) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRenewAgreement: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRenewAgreement: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRenewAgreementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRenewAgreementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRenewAgreementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTerminateAgreement) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTerminateAgreement: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTerminateAgreement: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgTerminateAgreementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgTerminateAgreementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgTerminateAgreementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSentAgreement) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSentAgreement: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSentAgreement: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Chain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSentAgreementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSentAgreementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSentAgreementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSentAgreement) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSentAgreement: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSentAgreement: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Chain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSentAgreementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSentAgreementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSentAgreementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSentAgreement) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSentAgreement: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSentAgreement: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSentAgreementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSentAgreementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSentAgreementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTimedoutAgreement) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTimedoutAgreement: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTimedoutAgreement: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Chain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTimedoutAgreementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTimedoutAgreementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTimedoutAgreementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTimedoutAgreement) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTimedoutAgreement: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTimedoutAgreement: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Chain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTimedoutAgreementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTimedoutAgreementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTimedoutAgreementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTimedoutAgreement) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTimedoutAgreement: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTimedoutAgreement: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTimedoutAgreementResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTimedoutAgreementResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTimedoutAgreementResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
