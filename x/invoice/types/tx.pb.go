// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: invoice/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgFactorInvoice struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgFactorInvoice) Reset()         { *m = MsgFactorInvoice{} }
func (m *MsgFactorInvoice) String() string { return proto.CompactTextString(m) }
func (*MsgFactorInvoice) ProtoMessage()    {}
func (*MsgFactorInvoice) Descriptor() ([]byte, []int) {
	return fileDescriptor_d445ebf9790a2691, []int{0}
}
func (m *MsgFactorInvoice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFactorInvoice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFactorInvoice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFactorInvoice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFactorInvoice.Merge(m, src)
}
func (m *MsgFactorInvoice) XXX_Size() int {
	return m.Size()
}
func (m *MsgFactorInvoice) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFactorInvoice.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFactorInvoice proto.InternalMessageInfo

func (m *MsgFactorInvoice) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgFactorInvoice) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgFactorInvoiceResponse struct {
}

func (m *MsgFactorInvoiceResponse) Reset()         { *m = MsgFactorInvoiceResponse{} }
func (m *MsgFactorInvoiceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgFactorInvoiceResponse) ProtoMessage()    {}
func (*MsgFactorInvoiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d445ebf9790a2691, []int{1}
}
func (m *MsgFactorInvoiceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFactorInvoiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFactorInvoiceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFactorInvoiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFactorInvoiceResponse.Merge(m, src)
}
func (m *MsgFactorInvoiceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgFactorInvoiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFactorInvoiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFactorInvoiceResponse proto.InternalMessageInfo

type MsgCreateSentInvoice struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Did     string `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	Chain   string `protobuf:"bytes,3,opt,name=chain,proto3" json:"chain,omitempty"`
}

func (m *MsgCreateSentInvoice) Reset()         { *m = MsgCreateSentInvoice{} }
func (m *MsgCreateSentInvoice) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSentInvoice) ProtoMessage()    {}
func (*MsgCreateSentInvoice) Descriptor() ([]byte, []int) {
	return fileDescriptor_d445ebf9790a2691, []int{2}
}
func (m *MsgCreateSentInvoice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSentInvoice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSentInvoice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSentInvoice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSentInvoice.Merge(m, src)
}
func (m *MsgCreateSentInvoice) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSentInvoice) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSentInvoice.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSentInvoice proto.InternalMessageInfo

func (m *MsgCreateSentInvoice) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateSentInvoice) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *MsgCreateSentInvoice) GetChain() string {
	if m != nil {
		return m.Chain
	}
	return ""
}

type MsgCreateSentInvoiceResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateSentInvoiceResponse) Reset()         { *m = MsgCreateSentInvoiceResponse{} }
func (m *MsgCreateSentInvoiceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSentInvoiceResponse) ProtoMessage()    {}
func (*MsgCreateSentInvoiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d445ebf9790a2691, []int{3}
}
func (m *MsgCreateSentInvoiceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSentInvoiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSentInvoiceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSentInvoiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSentInvoiceResponse.Merge(m, src)
}
func (m *MsgCreateSentInvoiceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSentInvoiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSentInvoiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSentInvoiceResponse proto.InternalMessageInfo

func (m *MsgCreateSentInvoiceResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateSentInvoice struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Did     string `protobuf:"bytes,3,opt,name=did,proto3" json:"did,omitempty"`
	Chain   string `protobuf:"bytes,4,opt,name=chain,proto3" json:"chain,omitempty"`
}

func (m *MsgUpdateSentInvoice) Reset()         { *m = MsgUpdateSentInvoice{} }
func (m *MsgUpdateSentInvoice) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSentInvoice) ProtoMessage()    {}
func (*MsgUpdateSentInvoice) Descriptor() ([]byte, []int) {
	return fileDescriptor_d445ebf9790a2691, []int{4}
}
func (m *MsgUpdateSentInvoice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSentInvoice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSentInvoice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSentInvoice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSentInvoice.Merge(m, src)
}
func (m *MsgUpdateSentInvoice) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSentInvoice) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSentInvoice.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSentInvoice proto.InternalMessageInfo

func (m *MsgUpdateSentInvoice) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateSentInvoice) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateSentInvoice) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *MsgUpdateSentInvoice) GetChain() string {
	if m != nil {
		return m.Chain
	}
	return ""
}

type MsgUpdateSentInvoiceResponse struct {
}

func (m *MsgUpdateSentInvoiceResponse) Reset()         { *m = MsgUpdateSentInvoiceResponse{} }
func (m *MsgUpdateSentInvoiceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSentInvoiceResponse) ProtoMessage()    {}
func (*MsgUpdateSentInvoiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d445ebf9790a2691, []int{5}
}
func (m *MsgUpdateSentInvoiceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSentInvoiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSentInvoiceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSentInvoiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSentInvoiceResponse.Merge(m, src)
}
func (m *MsgUpdateSentInvoiceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSentInvoiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSentInvoiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSentInvoiceResponse proto.InternalMessageInfo

type MsgDeleteSentInvoice struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteSentInvoice) Reset()         { *m = MsgDeleteSentInvoice{} }
func (m *MsgDeleteSentInvoice) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSentInvoice) ProtoMessage()    {}
func (*MsgDeleteSentInvoice) Descriptor() ([]byte, []int) {
	return fileDescriptor_d445ebf9790a2691, []int{6}
}
func (m *MsgDeleteSentInvoice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSentInvoice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSentInvoice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSentInvoice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSentInvoice.Merge(m, src)
}
func (m *MsgDeleteSentInvoice) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSentInvoice) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSentInvoice.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSentInvoice proto.InternalMessageInfo

func (m *MsgDeleteSentInvoice) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteSentInvoice) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteSentInvoiceResponse struct {
}

func (m *MsgDeleteSentInvoiceResponse) Reset()         { *m = MsgDeleteSentInvoiceResponse{} }
func (m *MsgDeleteSentInvoiceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSentInvoiceResponse) ProtoMessage()    {}
func (*MsgDeleteSentInvoiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d445ebf9790a2691, []int{7}
}
func (m *MsgDeleteSentInvoiceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSentInvoiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSentInvoiceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSentInvoiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSentInvoiceResponse.Merge(m, src)
}
func (m *MsgDeleteSentInvoiceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSentInvoiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSentInvoiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSentInvoiceResponse proto.InternalMessageInfo

type MsgCreateTimedoutInvoice struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Did     string `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	Chain   string `protobuf:"bytes,3,opt,name=chain,proto3" json:"chain,omitempty"`
}

func (m *MsgCreateTimedoutInvoice) Reset()         { *m = MsgCreateTimedoutInvoice{} }
func (m *MsgCreateTimedoutInvoice) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTimedoutInvoice) ProtoMessage()    {}
func (*MsgCreateTimedoutInvoice) Descriptor() ([]byte, []int) {
	return fileDescriptor_d445ebf9790a2691, []int{8}
}
func (m *MsgCreateTimedoutInvoice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTimedoutInvoice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTimedoutInvoice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTimedoutInvoice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTimedoutInvoice.Merge(m, src)
}
func (m *MsgCreateTimedoutInvoice) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTimedoutInvoice) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTimedoutInvoice.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTimedoutInvoice proto.InternalMessageInfo

func (m *MsgCreateTimedoutInvoice) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateTimedoutInvoice) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *MsgCreateTimedoutInvoice) GetChain() string {
	if m != nil {
		return m.Chain
	}
	return ""
}

type MsgCreateTimedoutInvoiceResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateTimedoutInvoiceResponse) Reset()         { *m = MsgCreateTimedoutInvoiceResponse{} }
func (m *MsgCreateTimedoutInvoiceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTimedoutInvoiceResponse) ProtoMessage()    {}
func (*MsgCreateTimedoutInvoiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d445ebf9790a2691, []int{9}
}
func (m *MsgCreateTimedoutInvoiceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTimedoutInvoiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTimedoutInvoiceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTimedoutInvoiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTimedoutInvoiceResponse.Merge(m, src)
}
func (m *MsgCreateTimedoutInvoiceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTimedoutInvoiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTimedoutInvoiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTimedoutInvoiceResponse proto.InternalMessageInfo

func (m *MsgCreateTimedoutInvoiceResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateTimedoutInvoice struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Did     string `protobuf:"bytes,3,opt,name=did,proto3" json:"did,omitempty"`
	Chain   string `protobuf:"bytes,4,opt,name=chain,proto3" json:"chain,omitempty"`
}

func (m *MsgUpdateTimedoutInvoice) Reset()         { *m = MsgUpdateTimedoutInvoice{} }
func (m *MsgUpdateTimedoutInvoice) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTimedoutInvoice) ProtoMessage()    {}
func (*MsgUpdateTimedoutInvoice) Descriptor() ([]byte, []int) {
	return fileDescriptor_d445ebf9790a2691, []int{10}
}
func (m *MsgUpdateTimedoutInvoice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTimedoutInvoice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTimedoutInvoice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTimedoutInvoice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTimedoutInvoice.Merge(m, src)
}
func (m *MsgUpdateTimedoutInvoice) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTimedoutInvoice) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTimedoutInvoice.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTimedoutInvoice proto.InternalMessageInfo

func (m *MsgUpdateTimedoutInvoice) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateTimedoutInvoice) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateTimedoutInvoice) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *MsgUpdateTimedoutInvoice) GetChain() string {
	if m != nil {
		return m.Chain
	}
	return ""
}

type MsgUpdateTimedoutInvoiceResponse struct {
}

func (m *MsgUpdateTimedoutInvoiceResponse) Reset()         { *m = MsgUpdateTimedoutInvoiceResponse{} }
func (m *MsgUpdateTimedoutInvoiceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTimedoutInvoiceResponse) ProtoMessage()    {}
func (*MsgUpdateTimedoutInvoiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d445ebf9790a2691, []int{11}
}
func (m *MsgUpdateTimedoutInvoiceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTimedoutInvoiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTimedoutInvoiceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTimedoutInvoiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTimedoutInvoiceResponse.Merge(m, src)
}
func (m *MsgUpdateTimedoutInvoiceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTimedoutInvoiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTimedoutInvoiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTimedoutInvoiceResponse proto.InternalMessageInfo

type MsgDeleteTimedoutInvoice struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteTimedoutInvoice) Reset()         { *m = MsgDeleteTimedoutInvoice{} }
func (m *MsgDeleteTimedoutInvoice) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTimedoutInvoice) ProtoMessage()    {}
func (*MsgDeleteTimedoutInvoice) Descriptor() ([]byte, []int) {
	return fileDescriptor_d445ebf9790a2691, []int{12}
}
func (m *MsgDeleteTimedoutInvoice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTimedoutInvoice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTimedoutInvoice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTimedoutInvoice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTimedoutInvoice.Merge(m, src)
}
func (m *MsgDeleteTimedoutInvoice) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTimedoutInvoice) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTimedoutInvoice.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTimedoutInvoice proto.InternalMessageInfo

func (m *MsgDeleteTimedoutInvoice) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteTimedoutInvoice) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteTimedoutInvoiceResponse struct {
}

func (m *MsgDeleteTimedoutInvoiceResponse) Reset()         { *m = MsgDeleteTimedoutInvoiceResponse{} }
func (m *MsgDeleteTimedoutInvoiceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTimedoutInvoiceResponse) ProtoMessage()    {}
func (*MsgDeleteTimedoutInvoiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d445ebf9790a2691, []int{13}
}
func (m *MsgDeleteTimedoutInvoiceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTimedoutInvoiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTimedoutInvoiceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTimedoutInvoiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTimedoutInvoiceResponse.Merge(m, src)
}
func (m *MsgDeleteTimedoutInvoiceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTimedoutInvoiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTimedoutInvoiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTimedoutInvoiceResponse proto.InternalMessageInfo

type MsgCreateInvoice struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Did       string `protobuf:"bytes,3,opt,name=did,proto3" json:"did,omitempty"`
	Amount    string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	State     string `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	Seller    string `protobuf:"bytes,6,opt,name=seller,proto3" json:"seller,omitempty"`
	Purchaser string `protobuf:"bytes,7,opt,name=purchaser,proto3" json:"purchaser,omitempty"`
}

func (m *MsgCreateInvoice) Reset()         { *m = MsgCreateInvoice{} }
func (m *MsgCreateInvoice) String() string { return proto.CompactTextString(m) }
func (*MsgCreateInvoice) ProtoMessage()    {}
func (*MsgCreateInvoice) Descriptor() ([]byte, []int) {
	return fileDescriptor_d445ebf9790a2691, []int{14}
}
func (m *MsgCreateInvoice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateInvoice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateInvoice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateInvoice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateInvoice.Merge(m, src)
}
func (m *MsgCreateInvoice) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateInvoice) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateInvoice.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateInvoice proto.InternalMessageInfo

func (m *MsgCreateInvoice) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateInvoice) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MsgCreateInvoice) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *MsgCreateInvoice) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *MsgCreateInvoice) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *MsgCreateInvoice) GetSeller() string {
	if m != nil {
		return m.Seller
	}
	return ""
}

func (m *MsgCreateInvoice) GetPurchaser() string {
	if m != nil {
		return m.Purchaser
	}
	return ""
}

type MsgCreateInvoiceResponse struct {
}

func (m *MsgCreateInvoiceResponse) Reset()         { *m = MsgCreateInvoiceResponse{} }
func (m *MsgCreateInvoiceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateInvoiceResponse) ProtoMessage()    {}
func (*MsgCreateInvoiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d445ebf9790a2691, []int{15}
}
func (m *MsgCreateInvoiceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateInvoiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateInvoiceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateInvoiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateInvoiceResponse.Merge(m, src)
}
func (m *MsgCreateInvoiceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateInvoiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateInvoiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateInvoiceResponse proto.InternalMessageInfo

type MsgPayInvoice struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgPayInvoice) Reset()         { *m = MsgPayInvoice{} }
func (m *MsgPayInvoice) String() string { return proto.CompactTextString(m) }
func (*MsgPayInvoice) ProtoMessage()    {}
func (*MsgPayInvoice) Descriptor() ([]byte, []int) {
	return fileDescriptor_d445ebf9790a2691, []int{16}
}
func (m *MsgPayInvoice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPayInvoice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPayInvoice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPayInvoice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPayInvoice.Merge(m, src)
}
func (m *MsgPayInvoice) XXX_Size() int {
	return m.Size()
}
func (m *MsgPayInvoice) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPayInvoice.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPayInvoice proto.InternalMessageInfo

func (m *MsgPayInvoice) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgPayInvoice) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgPayInvoiceResponse struct {
}

func (m *MsgPayInvoiceResponse) Reset()         { *m = MsgPayInvoiceResponse{} }
func (m *MsgPayInvoiceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgPayInvoiceResponse) ProtoMessage()    {}
func (*MsgPayInvoiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d445ebf9790a2691, []int{17}
}
func (m *MsgPayInvoiceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgPayInvoiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgPayInvoiceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgPayInvoiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgPayInvoiceResponse.Merge(m, src)
}
func (m *MsgPayInvoiceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgPayInvoiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgPayInvoiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgPayInvoiceResponse proto.InternalMessageInfo

type MsgVoidInvoice struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgVoidInvoice) Reset()         { *m = MsgVoidInvoice{} }
func (m *MsgVoidInvoice) String() string { return proto.CompactTextString(m) }
func (*MsgVoidInvoice) ProtoMessage()    {}
func (*MsgVoidInvoice) Descriptor() ([]byte, []int) {
	return fileDescriptor_d445ebf9790a2691, []int{18}
}
func (m *MsgVoidInvoice) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgVoidInvoice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgVoidInvoice.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgVoidInvoice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVoidInvoice.Merge(m, src)
}
func (m *MsgVoidInvoice) XXX_Size() int {
	return m.Size()
}
func (m *MsgVoidInvoice) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVoidInvoice.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVoidInvoice proto.InternalMessageInfo

func (m *MsgVoidInvoice) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgVoidInvoice) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgVoidInvoiceResponse struct {
}

func (m *MsgVoidInvoiceResponse) Reset()         { *m = MsgVoidInvoiceResponse{} }
func (m *MsgVoidInvoiceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgVoidInvoiceResponse) ProtoMessage()    {}
func (*MsgVoidInvoiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d445ebf9790a2691, []int{19}
}
func (m *MsgVoidInvoiceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgVoidInvoiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgVoidInvoiceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgVoidInvoiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVoidInvoiceResponse.Merge(m, src)
}
func (m *MsgVoidInvoiceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgVoidInvoiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVoidInvoiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVoidInvoiceResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgFactorInvoice)(nil), "stateset.core.invoice.MsgFactorInvoice")
	proto.RegisterType((*MsgFactorInvoiceResponse)(nil), "stateset.core.invoice.MsgFactorInvoiceResponse")
	proto.RegisterType((*MsgCreateSentInvoice)(nil), "stateset.core.invoice.MsgCreateSentInvoice")
	proto.RegisterType((*MsgCreateSentInvoiceResponse)(nil), "stateset.core.invoice.MsgCreateSentInvoiceResponse")
	proto.RegisterType((*MsgUpdateSentInvoice)(nil), "stateset.core.invoice.MsgUpdateSentInvoice")
	proto.RegisterType((*MsgUpdateSentInvoiceResponse)(nil), "stateset.core.invoice.MsgUpdateSentInvoiceResponse")
	proto.RegisterType((*MsgDeleteSentInvoice)(nil), "stateset.core.invoice.MsgDeleteSentInvoice")
	proto.RegisterType((*MsgDeleteSentInvoiceResponse)(nil), "stateset.core.invoice.MsgDeleteSentInvoiceResponse")
	proto.RegisterType((*MsgCreateTimedoutInvoice)(nil), "stateset.core.invoice.MsgCreateTimedoutInvoice")
	proto.RegisterType((*MsgCreateTimedoutInvoiceResponse)(nil), "stateset.core.invoice.MsgCreateTimedoutInvoiceResponse")
	proto.RegisterType((*MsgUpdateTimedoutInvoice)(nil), "stateset.core.invoice.MsgUpdateTimedoutInvoice")
	proto.RegisterType((*MsgUpdateTimedoutInvoiceResponse)(nil), "stateset.core.invoice.MsgUpdateTimedoutInvoiceResponse")
	proto.RegisterType((*MsgDeleteTimedoutInvoice)(nil), "stateset.core.invoice.MsgDeleteTimedoutInvoice")
	proto.RegisterType((*MsgDeleteTimedoutInvoiceResponse)(nil), "stateset.core.invoice.MsgDeleteTimedoutInvoiceResponse")
	proto.RegisterType((*MsgCreateInvoice)(nil), "stateset.core.invoice.MsgCreateInvoice")
	proto.RegisterType((*MsgCreateInvoiceResponse)(nil), "stateset.core.invoice.MsgCreateInvoiceResponse")
	proto.RegisterType((*MsgPayInvoice)(nil), "stateset.core.invoice.MsgPayInvoice")
	proto.RegisterType((*MsgPayInvoiceResponse)(nil), "stateset.core.invoice.MsgPayInvoiceResponse")
	proto.RegisterType((*MsgVoidInvoice)(nil), "stateset.core.invoice.MsgVoidInvoice")
	proto.RegisterType((*MsgVoidInvoiceResponse)(nil), "stateset.core.invoice.MsgVoidInvoiceResponse")
}

func init() { proto.RegisterFile("invoice/tx.proto", fileDescriptor_d445ebf9790a2691) }

var fileDescriptor_d445ebf9790a2691 = []byte{
	// 626 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x4f, 0x8b, 0xd3, 0x40,
	0x1c, 0x6d, 0xda, 0xdd, 0x2e, 0xfd, 0xc9, 0x2e, 0x35, 0x6c, 0xd7, 0x10, 0x96, 0x50, 0x8a, 0xb2,
	0x05, 0x35, 0x81, 0xdd, 0x83, 0x28, 0x1e, 0x64, 0x5d, 0x04, 0x0f, 0x05, 0xa9, 0x7f, 0x10, 0x11,
	0x34, 0x9b, 0x0c, 0x69, 0xa0, 0xcd, 0x94, 0xcc, 0x54, 0x76, 0x8f, 0x7e, 0x03, 0xc1, 0x6f, 0xe2,
	0xa7, 0xf0, 0xb8, 0x47, 0x8f, 0xd2, 0x7e, 0x11, 0xc9, 0xcc, 0x64, 0xb6, 0x69, 0xfe, 0x17, 0x6f,
	0x9d, 0xcc, 0xfb, 0xbd, 0xf7, 0xe6, 0xa5, 0xf3, 0x08, 0x74, 0xfd, 0xe0, 0x1b, 0xf6, 0x1d, 0x64,
	0xd1, 0x2b, 0x73, 0x1e, 0x62, 0x8a, 0xd5, 0x1e, 0xa1, 0x36, 0x45, 0x04, 0x51, 0xd3, 0xc1, 0x21,
	0x32, 0xc5, 0xbe, 0xae, 0xc7, 0x40, 0x82, 0x02, 0xfa, 0x45, 0x2c, 0xf8, 0x88, 0x6e, 0x48, 0x12,
	0x7f, 0x86, 0x5c, 0xbc, 0xd8, 0xd8, 0x1f, 0x3c, 0x87, 0xee, 0x88, 0x78, 0xaf, 0x6c, 0x87, 0xe2,
	0xf0, 0x35, 0xdf, 0x51, 0x35, 0xd8, 0x73, 0x42, 0x64, 0x53, 0x1c, 0x6a, 0x4a, 0x5f, 0x19, 0x76,
	0xc6, 0xf1, 0x52, 0x3d, 0x80, 0xa6, 0xef, 0x6a, 0xcd, 0xbe, 0x32, 0xdc, 0x19, 0x37, 0x7d, 0x77,
	0xa0, 0x83, 0xb6, 0x39, 0x3d, 0x46, 0x64, 0x8e, 0x03, 0x82, 0x06, 0x1f, 0xe1, 0x70, 0x44, 0xbc,
	0x97, 0xd1, 0x24, 0x7a, 0x8b, 0x02, 0x5a, 0xce, 0xde, 0x85, 0x96, 0x2b, 0xe8, 0x3b, 0xe3, 0xe8,
	0xa7, 0x7a, 0x08, 0xbb, 0xce, 0xc4, 0xf6, 0x03, 0xad, 0xc5, 0x9e, 0xf1, 0xc5, 0xc0, 0x84, 0xe3,
	0x2c, 0xe6, 0x58, 0x59, 0xb8, 0x54, 0xa4, 0xcb, 0x09, 0x73, 0xf2, 0x7e, 0xee, 0x56, 0x76, 0xb2,
	0x71, 0xce, 0xd8, 0x59, 0x2b, 0xc3, 0xd9, 0xce, 0xba, 0x33, 0x83, 0x39, 0x4b, 0x29, 0xc9, 0x4c,
	0x5e, 0x30, 0x27, 0x17, 0x68, 0x8a, 0xb6, 0x74, 0x22, 0x14, 0x52, 0x0c, 0x52, 0xe1, 0x33, 0x7b,
	0x23, 0x3c, 0x9b, 0x77, 0xe2, 0x95, 0xff, 0xbf, 0xe4, 0x4f, 0xa1, 0x9f, 0xc7, 0x9e, 0x9b, 0xfe,
	0x94, 0x39, 0xe2, 0x99, 0x54, 0x77, 0xb4, 0xed, 0x1b, 0x18, 0x30, 0x87, 0x99, 0x6a, 0x32, 0xa3,
	0x0b, 0xe6, 0x88, 0x67, 0xb8, 0xb5, 0x23, 0xa1, 0x94, 0xc9, 0x22, 0x95, 0x7e, 0x29, 0xec, 0x7a,
	0xf1, 0xc0, 0xea, 0x48, 0x74, 0x72, 0x0e, 0x7d, 0x04, 0x6d, 0x7b, 0x86, 0x17, 0x01, 0x15, 0xa7,
	0x16, 0xab, 0x28, 0x0c, 0xd6, 0x0d, 0xda, 0x2e, 0x0f, 0x83, 0x2d, 0x22, 0x34, 0x41, 0xd3, 0x29,
	0x0a, 0xb5, 0x36, 0x47, 0xf3, 0x95, 0x7a, 0x0c, 0x9d, 0xf9, 0x22, 0x74, 0x26, 0x36, 0x41, 0xa1,
	0xb6, 0xc7, 0xb6, 0x6e, 0x1f, 0x88, 0x4b, 0x9d, 0xf0, 0x2c, 0x0f, 0xf4, 0x14, 0xf6, 0x47, 0xc4,
	0x7b, 0x63, 0x5f, 0xd7, 0xcf, 0xeb, 0x1e, 0xf4, 0x12, 0xa3, 0x92, 0xf3, 0x19, 0x1c, 0x8c, 0x88,
	0xf7, 0x01, 0xfb, 0x6e, 0x7d, 0x52, 0x0d, 0x8e, 0x92, 0xb3, 0x31, 0xeb, 0xe9, 0xcf, 0x0e, 0xb4,
	0x46, 0xc4, 0x53, 0x7d, 0xd8, 0x4f, 0xb6, 0xdb, 0x89, 0x99, 0xd9, 0xa2, 0xe6, 0x66, 0x91, 0xe9,
	0x56, 0x45, 0xa0, 0xfc, 0xe7, 0x2f, 0xe0, 0x6e, 0xba, 0xee, 0x1e, 0xe6, 0xb3, 0xa4, 0xc0, 0xfa,
	0x59, 0x0d, 0xf0, 0xba, 0x6c, 0xba, 0xdb, 0x0a, 0x64, 0x53, 0xe0, 0x22, 0xd9, 0xdc, 0x2e, 0x8b,
	0x64, 0xd3, 0x45, 0x56, 0x20, 0x9b, 0x02, 0x17, 0xc9, 0xe6, 0x16, 0x9c, 0xfa, 0x5d, 0x81, 0x5e,
	0x76, 0xbd, 0x59, 0x65, 0xe1, 0x6d, 0x0c, 0xe8, 0x4f, 0x6a, 0x0e, 0x24, 0x3c, 0x64, 0x17, 0x9a,
	0x55, 0x96, 0x64, 0x0d, 0x0f, 0x85, 0x25, 0xc6, 0x3c, 0x64, 0x57, 0x98, 0x55, 0x16, 0x6b, 0x0d,
	0x0f, 0x85, 0xf5, 0x16, 0xdd, 0xad, 0x64, 0xb5, 0x9d, 0x94, 0x25, 0x5a, 0xe1, 0x6e, 0x65, 0x16,
	0x8f, 0xfa, 0x15, 0x60, 0xad, 0x75, 0xee, 0xe7, 0x8f, 0xdf, 0xa2, 0xf4, 0x47, 0x55, 0x50, 0x52,
	0xc1, 0x81, 0x3b, 0xeb, 0x1d, 0xf4, 0x20, 0x7f, 0x78, 0x0d, 0xa6, 0x3f, 0xae, 0x04, 0x8b, 0x45,
	0xce, 0xcf, 0x7f, 0x2f, 0x0d, 0xe5, 0x66, 0x69, 0x28, 0x7f, 0x97, 0x86, 0xf2, 0x63, 0x65, 0x34,
	0x6e, 0x56, 0x46, 0xe3, 0xcf, 0xca, 0x68, 0x7c, 0x1a, 0x7a, 0x3e, 0x9d, 0x2c, 0x2e, 0x4d, 0x07,
	0xcf, 0xac, 0x98, 0xd2, 0x8a, 0x28, 0xad, 0x2b, 0x4b, 0x7e, 0xc3, 0x5d, 0xcf, 0x11, 0xb9, 0x6c,
	0xb3, 0x2f, 0xb7, 0xb3, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xaa, 0xb9, 0xd0, 0xe3, 0x20, 0x0a,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	FactorInvoice(ctx context.Context, in *MsgFactorInvoice, opts ...grpc.CallOption) (*MsgFactorInvoiceResponse, error)
	CreateSentInvoice(ctx context.Context, in *MsgCreateSentInvoice, opts ...grpc.CallOption) (*MsgCreateSentInvoiceResponse, error)
	UpdateSentInvoice(ctx context.Context, in *MsgUpdateSentInvoice, opts ...grpc.CallOption) (*MsgUpdateSentInvoiceResponse, error)
	DeleteSentInvoice(ctx context.Context, in *MsgDeleteSentInvoice, opts ...grpc.CallOption) (*MsgDeleteSentInvoiceResponse, error)
	CreateTimedoutInvoice(ctx context.Context, in *MsgCreateTimedoutInvoice, opts ...grpc.CallOption) (*MsgCreateTimedoutInvoiceResponse, error)
	UpdateTimedoutInvoice(ctx context.Context, in *MsgUpdateTimedoutInvoice, opts ...grpc.CallOption) (*MsgUpdateTimedoutInvoiceResponse, error)
	DeleteTimedoutInvoice(ctx context.Context, in *MsgDeleteTimedoutInvoice, opts ...grpc.CallOption) (*MsgDeleteTimedoutInvoiceResponse, error)
	CreateInvoice(ctx context.Context, in *MsgCreateInvoice, opts ...grpc.CallOption) (*MsgCreateInvoiceResponse, error)
	PayInvoice(ctx context.Context, in *MsgPayInvoice, opts ...grpc.CallOption) (*MsgPayInvoiceResponse, error)
	VoidInvoice(ctx context.Context, in *MsgVoidInvoice, opts ...grpc.CallOption) (*MsgVoidInvoiceResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) FactorInvoice(ctx context.Context, in *MsgFactorInvoice, opts ...grpc.CallOption) (*MsgFactorInvoiceResponse, error) {
	out := new(MsgFactorInvoiceResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.invoice.Msg/FactorInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateSentInvoice(ctx context.Context, in *MsgCreateSentInvoice, opts ...grpc.CallOption) (*MsgCreateSentInvoiceResponse, error) {
	out := new(MsgCreateSentInvoiceResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.invoice.Msg/CreateSentInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateSentInvoice(ctx context.Context, in *MsgUpdateSentInvoice, opts ...grpc.CallOption) (*MsgUpdateSentInvoiceResponse, error) {
	out := new(MsgUpdateSentInvoiceResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.invoice.Msg/UpdateSentInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteSentInvoice(ctx context.Context, in *MsgDeleteSentInvoice, opts ...grpc.CallOption) (*MsgDeleteSentInvoiceResponse, error) {
	out := new(MsgDeleteSentInvoiceResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.invoice.Msg/DeleteSentInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateTimedoutInvoice(ctx context.Context, in *MsgCreateTimedoutInvoice, opts ...grpc.CallOption) (*MsgCreateTimedoutInvoiceResponse, error) {
	out := new(MsgCreateTimedoutInvoiceResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.invoice.Msg/CreateTimedoutInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateTimedoutInvoice(ctx context.Context, in *MsgUpdateTimedoutInvoice, opts ...grpc.CallOption) (*MsgUpdateTimedoutInvoiceResponse, error) {
	out := new(MsgUpdateTimedoutInvoiceResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.invoice.Msg/UpdateTimedoutInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteTimedoutInvoice(ctx context.Context, in *MsgDeleteTimedoutInvoice, opts ...grpc.CallOption) (*MsgDeleteTimedoutInvoiceResponse, error) {
	out := new(MsgDeleteTimedoutInvoiceResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.invoice.Msg/DeleteTimedoutInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateInvoice(ctx context.Context, in *MsgCreateInvoice, opts ...grpc.CallOption) (*MsgCreateInvoiceResponse, error) {
	out := new(MsgCreateInvoiceResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.invoice.Msg/CreateInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) PayInvoice(ctx context.Context, in *MsgPayInvoice, opts ...grpc.CallOption) (*MsgPayInvoiceResponse, error) {
	out := new(MsgPayInvoiceResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.invoice.Msg/PayInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) VoidInvoice(ctx context.Context, in *MsgVoidInvoice, opts ...grpc.CallOption) (*MsgVoidInvoiceResponse, error) {
	out := new(MsgVoidInvoiceResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.invoice.Msg/VoidInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	FactorInvoice(context.Context, *MsgFactorInvoice) (*MsgFactorInvoiceResponse, error)
	CreateSentInvoice(context.Context, *MsgCreateSentInvoice) (*MsgCreateSentInvoiceResponse, error)
	UpdateSentInvoice(context.Context, *MsgUpdateSentInvoice) (*MsgUpdateSentInvoiceResponse, error)
	DeleteSentInvoice(context.Context, *MsgDeleteSentInvoice) (*MsgDeleteSentInvoiceResponse, error)
	CreateTimedoutInvoice(context.Context, *MsgCreateTimedoutInvoice) (*MsgCreateTimedoutInvoiceResponse, error)
	UpdateTimedoutInvoice(context.Context, *MsgUpdateTimedoutInvoice) (*MsgUpdateTimedoutInvoiceResponse, error)
	DeleteTimedoutInvoice(context.Context, *MsgDeleteTimedoutInvoice) (*MsgDeleteTimedoutInvoiceResponse, error)
	CreateInvoice(context.Context, *MsgCreateInvoice) (*MsgCreateInvoiceResponse, error)
	PayInvoice(context.Context, *MsgPayInvoice) (*MsgPayInvoiceResponse, error)
	VoidInvoice(context.Context, *MsgVoidInvoice) (*MsgVoidInvoiceResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) FactorInvoice(ctx context.Context, req *MsgFactorInvoice) (*MsgFactorInvoiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FactorInvoice not implemented")
}
func (*UnimplementedMsgServer) CreateSentInvoice(ctx context.Context, req *MsgCreateSentInvoice) (*MsgCreateSentInvoiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSentInvoice not implemented")
}
func (*UnimplementedMsgServer) UpdateSentInvoice(ctx context.Context, req *MsgUpdateSentInvoice) (*MsgUpdateSentInvoiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSentInvoice not implemented")
}
func (*UnimplementedMsgServer) DeleteSentInvoice(ctx context.Context, req *MsgDeleteSentInvoice) (*MsgDeleteSentInvoiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSentInvoice not implemented")
}
func (*UnimplementedMsgServer) CreateTimedoutInvoice(ctx context.Context, req *MsgCreateTimedoutInvoice) (*MsgCreateTimedoutInvoiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTimedoutInvoice not implemented")
}
func (*UnimplementedMsgServer) UpdateTimedoutInvoice(ctx context.Context, req *MsgUpdateTimedoutInvoice) (*MsgUpdateTimedoutInvoiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTimedoutInvoice not implemented")
}
func (*UnimplementedMsgServer) DeleteTimedoutInvoice(ctx context.Context, req *MsgDeleteTimedoutInvoice) (*MsgDeleteTimedoutInvoiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTimedoutInvoice not implemented")
}
func (*UnimplementedMsgServer) CreateInvoice(ctx context.Context, req *MsgCreateInvoice) (*MsgCreateInvoiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateInvoice not implemented")
}
func (*UnimplementedMsgServer) PayInvoice(ctx context.Context, req *MsgPayInvoice) (*MsgPayInvoiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PayInvoice not implemented")
}
func (*UnimplementedMsgServer) VoidInvoice(ctx context.Context, req *MsgVoidInvoice) (*MsgVoidInvoiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VoidInvoice not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_FactorInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgFactorInvoice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).FactorInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.invoice.Msg/FactorInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).FactorInvoice(ctx, req.(*MsgFactorInvoice))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateSentInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSentInvoice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSentInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.invoice.Msg/CreateSentInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSentInvoice(ctx, req.(*MsgCreateSentInvoice))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateSentInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateSentInvoice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateSentInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.invoice.Msg/UpdateSentInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateSentInvoice(ctx, req.(*MsgUpdateSentInvoice))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteSentInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteSentInvoice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteSentInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.invoice.Msg/DeleteSentInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteSentInvoice(ctx, req.(*MsgDeleteSentInvoice))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateTimedoutInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTimedoutInvoice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTimedoutInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.invoice.Msg/CreateTimedoutInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTimedoutInvoice(ctx, req.(*MsgCreateTimedoutInvoice))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateTimedoutInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateTimedoutInvoice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateTimedoutInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.invoice.Msg/UpdateTimedoutInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateTimedoutInvoice(ctx, req.(*MsgUpdateTimedoutInvoice))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteTimedoutInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteTimedoutInvoice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteTimedoutInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.invoice.Msg/DeleteTimedoutInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteTimedoutInvoice(ctx, req.(*MsgDeleteTimedoutInvoice))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateInvoice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.invoice.Msg/CreateInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateInvoice(ctx, req.(*MsgCreateInvoice))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_PayInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgPayInvoice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).PayInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.invoice.Msg/PayInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).PayInvoice(ctx, req.(*MsgPayInvoice))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_VoidInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgVoidInvoice)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).VoidInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.invoice.Msg/VoidInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).VoidInvoice(ctx, req.(*MsgVoidInvoice))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stateset.core.invoice.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FactorInvoice",
			Handler:    _Msg_FactorInvoice_Handler,
		},
		{
			MethodName: "CreateSentInvoice",
			Handler:    _Msg_CreateSentInvoice_Handler,
		},
		{
			MethodName: "UpdateSentInvoice",
			Handler:    _Msg_UpdateSentInvoice_Handler,
		},
		{
			MethodName: "DeleteSentInvoice",
			Handler:    _Msg_DeleteSentInvoice_Handler,
		},
		{
			MethodName: "CreateTimedoutInvoice",
			Handler:    _Msg_CreateTimedoutInvoice_Handler,
		},
		{
			MethodName: "UpdateTimedoutInvoice",
			Handler:    _Msg_UpdateTimedoutInvoice_Handler,
		},
		{
			MethodName: "DeleteTimedoutInvoice",
			Handler:    _Msg_DeleteTimedoutInvoice_Handler,
		},
		{
			MethodName: "CreateInvoice",
			Handler:    _Msg_CreateInvoice_Handler,
		},
		{
			MethodName: "PayInvoice",
			Handler:    _Msg_PayInvoice_Handler,
		},
		{
			MethodName: "VoidInvoice",
			Handler:    _Msg_VoidInvoice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "invoice/tx.proto",
}

func (m *MsgFactorInvoice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFactorInvoice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFactorInvoice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgFactorInvoiceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFactorInvoiceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFactorInvoiceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateSentInvoice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSentInvoice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSentInvoice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Chain) > 0 {
		i -= len(m.Chain)
		copy(dAtA[i:], m.Chain)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Chain)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSentInvoiceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSentInvoiceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSentInvoiceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSentInvoice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSentInvoice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSentInvoice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Chain) > 0 {
		i -= len(m.Chain)
		copy(dAtA[i:], m.Chain)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Chain)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSentInvoiceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSentInvoiceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSentInvoiceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSentInvoice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSentInvoice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSentInvoice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSentInvoiceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSentInvoiceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSentInvoiceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateTimedoutInvoice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTimedoutInvoice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTimedoutInvoice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Chain) > 0 {
		i -= len(m.Chain)
		copy(dAtA[i:], m.Chain)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Chain)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTimedoutInvoiceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTimedoutInvoiceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTimedoutInvoiceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTimedoutInvoice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTimedoutInvoice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTimedoutInvoice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Chain) > 0 {
		i -= len(m.Chain)
		copy(dAtA[i:], m.Chain)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Chain)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTimedoutInvoiceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTimedoutInvoiceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTimedoutInvoiceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTimedoutInvoice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTimedoutInvoice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTimedoutInvoice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTimedoutInvoiceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTimedoutInvoiceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTimedoutInvoiceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateInvoice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateInvoice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateInvoice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Purchaser) > 0 {
		i -= len(m.Purchaser)
		copy(dAtA[i:], m.Purchaser)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Purchaser)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Seller) > 0 {
		i -= len(m.Seller)
		copy(dAtA[i:], m.Seller)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Seller)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.State) > 0 {
		i -= len(m.State)
		copy(dAtA[i:], m.State)
		i = encodeVarintTx(dAtA, i, uint64(len(m.State)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Amount) > 0 {
		i -= len(m.Amount)
		copy(dAtA[i:], m.Amount)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Amount)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateInvoiceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateInvoiceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateInvoiceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgPayInvoice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPayInvoice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPayInvoice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgPayInvoiceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgPayInvoiceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgPayInvoiceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgVoidInvoice) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgVoidInvoice) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgVoidInvoice) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgVoidInvoiceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgVoidInvoiceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgVoidInvoiceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgFactorInvoice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgFactorInvoiceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateSentInvoice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Chain)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateSentInvoiceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateSentInvoice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Chain)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateSentInvoiceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteSentInvoice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteSentInvoiceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateTimedoutInvoice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Chain)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTimedoutInvoiceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateTimedoutInvoice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Chain)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateTimedoutInvoiceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteTimedoutInvoice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteTimedoutInvoiceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateInvoice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Amount)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Seller)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Purchaser)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateInvoiceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgPayInvoice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgPayInvoiceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgVoidInvoice) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgVoidInvoiceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgFactorInvoice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFactorInvoice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFactorInvoice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFactorInvoiceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFactorInvoiceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFactorInvoiceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSentInvoice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSentInvoice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSentInvoice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Chain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSentInvoiceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSentInvoiceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSentInvoiceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSentInvoice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSentInvoice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSentInvoice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Chain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSentInvoiceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSentInvoiceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSentInvoiceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSentInvoice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSentInvoice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSentInvoice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSentInvoiceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSentInvoiceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSentInvoiceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTimedoutInvoice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTimedoutInvoice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTimedoutInvoice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Chain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTimedoutInvoiceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTimedoutInvoiceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTimedoutInvoiceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTimedoutInvoice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTimedoutInvoice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTimedoutInvoice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Chain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTimedoutInvoiceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTimedoutInvoiceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTimedoutInvoiceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTimedoutInvoice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTimedoutInvoice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTimedoutInvoice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTimedoutInvoiceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTimedoutInvoiceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTimedoutInvoiceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateInvoice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateInvoice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateInvoice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Seller", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Seller = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Purchaser", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Purchaser = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateInvoiceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateInvoiceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateInvoiceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPayInvoice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPayInvoice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPayInvoice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgPayInvoiceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgPayInvoiceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgPayInvoiceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgVoidInvoice) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgVoidInvoice: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgVoidInvoice: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgVoidInvoiceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgVoidInvoiceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgVoidInvoiceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
