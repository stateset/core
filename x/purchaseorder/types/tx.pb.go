// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: purchaseorder/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgFinancePurchaseorder struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgFinancePurchaseorder) Reset()         { *m = MsgFinancePurchaseorder{} }
func (m *MsgFinancePurchaseorder) String() string { return proto.CompactTextString(m) }
func (*MsgFinancePurchaseorder) ProtoMessage()    {}
func (*MsgFinancePurchaseorder) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a0860f861fbe74, []int{0}
}
func (m *MsgFinancePurchaseorder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFinancePurchaseorder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFinancePurchaseorder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFinancePurchaseorder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFinancePurchaseorder.Merge(m, src)
}
func (m *MsgFinancePurchaseorder) XXX_Size() int {
	return m.Size()
}
func (m *MsgFinancePurchaseorder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFinancePurchaseorder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFinancePurchaseorder proto.InternalMessageInfo

func (m *MsgFinancePurchaseorder) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgFinancePurchaseorder) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgFinancePurchaseorderResponse struct {
}

func (m *MsgFinancePurchaseorderResponse) Reset()         { *m = MsgFinancePurchaseorderResponse{} }
func (m *MsgFinancePurchaseorderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgFinancePurchaseorderResponse) ProtoMessage()    {}
func (*MsgFinancePurchaseorderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a0860f861fbe74, []int{1}
}
func (m *MsgFinancePurchaseorderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFinancePurchaseorderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFinancePurchaseorderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFinancePurchaseorderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFinancePurchaseorderResponse.Merge(m, src)
}
func (m *MsgFinancePurchaseorderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgFinancePurchaseorderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFinancePurchaseorderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFinancePurchaseorderResponse proto.InternalMessageInfo

type MsgCancelPurchaseorder struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCancelPurchaseorder) Reset()         { *m = MsgCancelPurchaseorder{} }
func (m *MsgCancelPurchaseorder) String() string { return proto.CompactTextString(m) }
func (*MsgCancelPurchaseorder) ProtoMessage()    {}
func (*MsgCancelPurchaseorder) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a0860f861fbe74, []int{2}
}
func (m *MsgCancelPurchaseorder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCancelPurchaseorder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCancelPurchaseorder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCancelPurchaseorder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCancelPurchaseorder.Merge(m, src)
}
func (m *MsgCancelPurchaseorder) XXX_Size() int {
	return m.Size()
}
func (m *MsgCancelPurchaseorder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCancelPurchaseorder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCancelPurchaseorder proto.InternalMessageInfo

func (m *MsgCancelPurchaseorder) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCancelPurchaseorder) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgCancelPurchaseorderResponse struct {
}

func (m *MsgCancelPurchaseorderResponse) Reset()         { *m = MsgCancelPurchaseorderResponse{} }
func (m *MsgCancelPurchaseorderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCancelPurchaseorderResponse) ProtoMessage()    {}
func (*MsgCancelPurchaseorderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a0860f861fbe74, []int{3}
}
func (m *MsgCancelPurchaseorderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCancelPurchaseorderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCancelPurchaseorderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCancelPurchaseorderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCancelPurchaseorderResponse.Merge(m, src)
}
func (m *MsgCancelPurchaseorderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCancelPurchaseorderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCancelPurchaseorderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCancelPurchaseorderResponse proto.InternalMessageInfo

type MsgCompletePurchaseorder struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCompletePurchaseorder) Reset()         { *m = MsgCompletePurchaseorder{} }
func (m *MsgCompletePurchaseorder) String() string { return proto.CompactTextString(m) }
func (*MsgCompletePurchaseorder) ProtoMessage()    {}
func (*MsgCompletePurchaseorder) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a0860f861fbe74, []int{4}
}
func (m *MsgCompletePurchaseorder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCompletePurchaseorder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCompletePurchaseorder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCompletePurchaseorder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCompletePurchaseorder.Merge(m, src)
}
func (m *MsgCompletePurchaseorder) XXX_Size() int {
	return m.Size()
}
func (m *MsgCompletePurchaseorder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCompletePurchaseorder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCompletePurchaseorder proto.InternalMessageInfo

func (m *MsgCompletePurchaseorder) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCompletePurchaseorder) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgCompletePurchaseorderResponse struct {
}

func (m *MsgCompletePurchaseorderResponse) Reset()         { *m = MsgCompletePurchaseorderResponse{} }
func (m *MsgCompletePurchaseorderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCompletePurchaseorderResponse) ProtoMessage()    {}
func (*MsgCompletePurchaseorderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a0860f861fbe74, []int{5}
}
func (m *MsgCompletePurchaseorderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCompletePurchaseorderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCompletePurchaseorderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCompletePurchaseorderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCompletePurchaseorderResponse.Merge(m, src)
}
func (m *MsgCompletePurchaseorderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCompletePurchaseorderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCompletePurchaseorderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCompletePurchaseorderResponse proto.InternalMessageInfo

type MsgCreateSentPurchaseorder struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Did     string `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	Chain   string `protobuf:"bytes,3,opt,name=chain,proto3" json:"chain,omitempty"`
}

func (m *MsgCreateSentPurchaseorder) Reset()         { *m = MsgCreateSentPurchaseorder{} }
func (m *MsgCreateSentPurchaseorder) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSentPurchaseorder) ProtoMessage()    {}
func (*MsgCreateSentPurchaseorder) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a0860f861fbe74, []int{6}
}
func (m *MsgCreateSentPurchaseorder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSentPurchaseorder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSentPurchaseorder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSentPurchaseorder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSentPurchaseorder.Merge(m, src)
}
func (m *MsgCreateSentPurchaseorder) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSentPurchaseorder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSentPurchaseorder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSentPurchaseorder proto.InternalMessageInfo

func (m *MsgCreateSentPurchaseorder) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateSentPurchaseorder) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *MsgCreateSentPurchaseorder) GetChain() string {
	if m != nil {
		return m.Chain
	}
	return ""
}

type MsgCreateSentPurchaseorderResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateSentPurchaseorderResponse) Reset()         { *m = MsgCreateSentPurchaseorderResponse{} }
func (m *MsgCreateSentPurchaseorderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSentPurchaseorderResponse) ProtoMessage()    {}
func (*MsgCreateSentPurchaseorderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a0860f861fbe74, []int{7}
}
func (m *MsgCreateSentPurchaseorderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSentPurchaseorderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSentPurchaseorderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSentPurchaseorderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSentPurchaseorderResponse.Merge(m, src)
}
func (m *MsgCreateSentPurchaseorderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSentPurchaseorderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSentPurchaseorderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSentPurchaseorderResponse proto.InternalMessageInfo

func (m *MsgCreateSentPurchaseorderResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateSentPurchaseorder struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Did     string `protobuf:"bytes,3,opt,name=did,proto3" json:"did,omitempty"`
	Chain   string `protobuf:"bytes,4,opt,name=chain,proto3" json:"chain,omitempty"`
}

func (m *MsgUpdateSentPurchaseorder) Reset()         { *m = MsgUpdateSentPurchaseorder{} }
func (m *MsgUpdateSentPurchaseorder) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSentPurchaseorder) ProtoMessage()    {}
func (*MsgUpdateSentPurchaseorder) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a0860f861fbe74, []int{8}
}
func (m *MsgUpdateSentPurchaseorder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSentPurchaseorder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSentPurchaseorder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSentPurchaseorder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSentPurchaseorder.Merge(m, src)
}
func (m *MsgUpdateSentPurchaseorder) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSentPurchaseorder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSentPurchaseorder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSentPurchaseorder proto.InternalMessageInfo

func (m *MsgUpdateSentPurchaseorder) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateSentPurchaseorder) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateSentPurchaseorder) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *MsgUpdateSentPurchaseorder) GetChain() string {
	if m != nil {
		return m.Chain
	}
	return ""
}

type MsgUpdateSentPurchaseorderResponse struct {
}

func (m *MsgUpdateSentPurchaseorderResponse) Reset()         { *m = MsgUpdateSentPurchaseorderResponse{} }
func (m *MsgUpdateSentPurchaseorderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSentPurchaseorderResponse) ProtoMessage()    {}
func (*MsgUpdateSentPurchaseorderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a0860f861fbe74, []int{9}
}
func (m *MsgUpdateSentPurchaseorderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSentPurchaseorderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSentPurchaseorderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSentPurchaseorderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSentPurchaseorderResponse.Merge(m, src)
}
func (m *MsgUpdateSentPurchaseorderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSentPurchaseorderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSentPurchaseorderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSentPurchaseorderResponse proto.InternalMessageInfo

type MsgDeleteSentPurchaseorder struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteSentPurchaseorder) Reset()         { *m = MsgDeleteSentPurchaseorder{} }
func (m *MsgDeleteSentPurchaseorder) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSentPurchaseorder) ProtoMessage()    {}
func (*MsgDeleteSentPurchaseorder) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a0860f861fbe74, []int{10}
}
func (m *MsgDeleteSentPurchaseorder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSentPurchaseorder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSentPurchaseorder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSentPurchaseorder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSentPurchaseorder.Merge(m, src)
}
func (m *MsgDeleteSentPurchaseorder) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSentPurchaseorder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSentPurchaseorder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSentPurchaseorder proto.InternalMessageInfo

func (m *MsgDeleteSentPurchaseorder) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteSentPurchaseorder) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteSentPurchaseorderResponse struct {
}

func (m *MsgDeleteSentPurchaseorderResponse) Reset()         { *m = MsgDeleteSentPurchaseorderResponse{} }
func (m *MsgDeleteSentPurchaseorderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteSentPurchaseorderResponse) ProtoMessage()    {}
func (*MsgDeleteSentPurchaseorderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a0860f861fbe74, []int{11}
}
func (m *MsgDeleteSentPurchaseorderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteSentPurchaseorderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteSentPurchaseorderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteSentPurchaseorderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteSentPurchaseorderResponse.Merge(m, src)
}
func (m *MsgDeleteSentPurchaseorderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteSentPurchaseorderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteSentPurchaseorderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteSentPurchaseorderResponse proto.InternalMessageInfo

type MsgCreateTimedoutPurchaseorder struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Did     string `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	Chain   string `protobuf:"bytes,3,opt,name=chain,proto3" json:"chain,omitempty"`
}

func (m *MsgCreateTimedoutPurchaseorder) Reset()         { *m = MsgCreateTimedoutPurchaseorder{} }
func (m *MsgCreateTimedoutPurchaseorder) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTimedoutPurchaseorder) ProtoMessage()    {}
func (*MsgCreateTimedoutPurchaseorder) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a0860f861fbe74, []int{12}
}
func (m *MsgCreateTimedoutPurchaseorder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTimedoutPurchaseorder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTimedoutPurchaseorder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTimedoutPurchaseorder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTimedoutPurchaseorder.Merge(m, src)
}
func (m *MsgCreateTimedoutPurchaseorder) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTimedoutPurchaseorder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTimedoutPurchaseorder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTimedoutPurchaseorder proto.InternalMessageInfo

func (m *MsgCreateTimedoutPurchaseorder) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateTimedoutPurchaseorder) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *MsgCreateTimedoutPurchaseorder) GetChain() string {
	if m != nil {
		return m.Chain
	}
	return ""
}

type MsgCreateTimedoutPurchaseorderResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateTimedoutPurchaseorderResponse) Reset() {
	*m = MsgCreateTimedoutPurchaseorderResponse{}
}
func (m *MsgCreateTimedoutPurchaseorderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTimedoutPurchaseorderResponse) ProtoMessage()    {}
func (*MsgCreateTimedoutPurchaseorderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a0860f861fbe74, []int{13}
}
func (m *MsgCreateTimedoutPurchaseorderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTimedoutPurchaseorderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTimedoutPurchaseorderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTimedoutPurchaseorderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTimedoutPurchaseorderResponse.Merge(m, src)
}
func (m *MsgCreateTimedoutPurchaseorderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTimedoutPurchaseorderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTimedoutPurchaseorderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTimedoutPurchaseorderResponse proto.InternalMessageInfo

func (m *MsgCreateTimedoutPurchaseorderResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateTimedoutPurchaseorder struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Did     string `protobuf:"bytes,3,opt,name=did,proto3" json:"did,omitempty"`
	Chain   string `protobuf:"bytes,4,opt,name=chain,proto3" json:"chain,omitempty"`
}

func (m *MsgUpdateTimedoutPurchaseorder) Reset()         { *m = MsgUpdateTimedoutPurchaseorder{} }
func (m *MsgUpdateTimedoutPurchaseorder) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTimedoutPurchaseorder) ProtoMessage()    {}
func (*MsgUpdateTimedoutPurchaseorder) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a0860f861fbe74, []int{14}
}
func (m *MsgUpdateTimedoutPurchaseorder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTimedoutPurchaseorder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTimedoutPurchaseorder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTimedoutPurchaseorder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTimedoutPurchaseorder.Merge(m, src)
}
func (m *MsgUpdateTimedoutPurchaseorder) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTimedoutPurchaseorder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTimedoutPurchaseorder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTimedoutPurchaseorder proto.InternalMessageInfo

func (m *MsgUpdateTimedoutPurchaseorder) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateTimedoutPurchaseorder) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateTimedoutPurchaseorder) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *MsgUpdateTimedoutPurchaseorder) GetChain() string {
	if m != nil {
		return m.Chain
	}
	return ""
}

type MsgUpdateTimedoutPurchaseorderResponse struct {
}

func (m *MsgUpdateTimedoutPurchaseorderResponse) Reset() {
	*m = MsgUpdateTimedoutPurchaseorderResponse{}
}
func (m *MsgUpdateTimedoutPurchaseorderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTimedoutPurchaseorderResponse) ProtoMessage()    {}
func (*MsgUpdateTimedoutPurchaseorderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a0860f861fbe74, []int{15}
}
func (m *MsgUpdateTimedoutPurchaseorderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTimedoutPurchaseorderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTimedoutPurchaseorderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTimedoutPurchaseorderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTimedoutPurchaseorderResponse.Merge(m, src)
}
func (m *MsgUpdateTimedoutPurchaseorderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTimedoutPurchaseorderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTimedoutPurchaseorderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTimedoutPurchaseorderResponse proto.InternalMessageInfo

type MsgDeleteTimedoutPurchaseorder struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteTimedoutPurchaseorder) Reset()         { *m = MsgDeleteTimedoutPurchaseorder{} }
func (m *MsgDeleteTimedoutPurchaseorder) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTimedoutPurchaseorder) ProtoMessage()    {}
func (*MsgDeleteTimedoutPurchaseorder) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a0860f861fbe74, []int{16}
}
func (m *MsgDeleteTimedoutPurchaseorder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTimedoutPurchaseorder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTimedoutPurchaseorder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTimedoutPurchaseorder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTimedoutPurchaseorder.Merge(m, src)
}
func (m *MsgDeleteTimedoutPurchaseorder) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTimedoutPurchaseorder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTimedoutPurchaseorder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTimedoutPurchaseorder proto.InternalMessageInfo

func (m *MsgDeleteTimedoutPurchaseorder) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteTimedoutPurchaseorder) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteTimedoutPurchaseorderResponse struct {
}

func (m *MsgDeleteTimedoutPurchaseorderResponse) Reset() {
	*m = MsgDeleteTimedoutPurchaseorderResponse{}
}
func (m *MsgDeleteTimedoutPurchaseorderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTimedoutPurchaseorderResponse) ProtoMessage()    {}
func (*MsgDeleteTimedoutPurchaseorderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a0860f861fbe74, []int{17}
}
func (m *MsgDeleteTimedoutPurchaseorderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTimedoutPurchaseorderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTimedoutPurchaseorderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTimedoutPurchaseorderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTimedoutPurchaseorderResponse.Merge(m, src)
}
func (m *MsgDeleteTimedoutPurchaseorderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTimedoutPurchaseorderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTimedoutPurchaseorderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTimedoutPurchaseorderResponse proto.InternalMessageInfo

type MsgRequestPurchaseorder struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Did       string `protobuf:"bytes,2,opt,name=did,proto3" json:"did,omitempty"`
	Uri       string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	Amount    string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	State     string `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	Purchaser string `protobuf:"bytes,6,opt,name=purchaser,proto3" json:"purchaser,omitempty"`
	Seller    string `protobuf:"bytes,7,opt,name=seller,proto3" json:"seller,omitempty"`
}

func (m *MsgRequestPurchaseorder) Reset()         { *m = MsgRequestPurchaseorder{} }
func (m *MsgRequestPurchaseorder) String() string { return proto.CompactTextString(m) }
func (*MsgRequestPurchaseorder) ProtoMessage()    {}
func (*MsgRequestPurchaseorder) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a0860f861fbe74, []int{18}
}
func (m *MsgRequestPurchaseorder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRequestPurchaseorder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRequestPurchaseorder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRequestPurchaseorder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRequestPurchaseorder.Merge(m, src)
}
func (m *MsgRequestPurchaseorder) XXX_Size() int {
	return m.Size()
}
func (m *MsgRequestPurchaseorder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRequestPurchaseorder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRequestPurchaseorder proto.InternalMessageInfo

func (m *MsgRequestPurchaseorder) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRequestPurchaseorder) GetDid() string {
	if m != nil {
		return m.Did
	}
	return ""
}

func (m *MsgRequestPurchaseorder) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *MsgRequestPurchaseorder) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *MsgRequestPurchaseorder) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *MsgRequestPurchaseorder) GetPurchaser() string {
	if m != nil {
		return m.Purchaser
	}
	return ""
}

func (m *MsgRequestPurchaseorder) GetSeller() string {
	if m != nil {
		return m.Seller
	}
	return ""
}

type MsgRequestPurchaseorderResponse struct {
}

func (m *MsgRequestPurchaseorderResponse) Reset()         { *m = MsgRequestPurchaseorderResponse{} }
func (m *MsgRequestPurchaseorderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRequestPurchaseorderResponse) ProtoMessage()    {}
func (*MsgRequestPurchaseorderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_73a0860f861fbe74, []int{19}
}
func (m *MsgRequestPurchaseorderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRequestPurchaseorderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRequestPurchaseorderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRequestPurchaseorderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRequestPurchaseorderResponse.Merge(m, src)
}
func (m *MsgRequestPurchaseorderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRequestPurchaseorderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRequestPurchaseorderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRequestPurchaseorderResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgFinancePurchaseorder)(nil), "stateset.core.purchaseorder.MsgFinancePurchaseorder")
	proto.RegisterType((*MsgFinancePurchaseorderResponse)(nil), "stateset.core.purchaseorder.MsgFinancePurchaseorderResponse")
	proto.RegisterType((*MsgCancelPurchaseorder)(nil), "stateset.core.purchaseorder.MsgCancelPurchaseorder")
	proto.RegisterType((*MsgCancelPurchaseorderResponse)(nil), "stateset.core.purchaseorder.MsgCancelPurchaseorderResponse")
	proto.RegisterType((*MsgCompletePurchaseorder)(nil), "stateset.core.purchaseorder.MsgCompletePurchaseorder")
	proto.RegisterType((*MsgCompletePurchaseorderResponse)(nil), "stateset.core.purchaseorder.MsgCompletePurchaseorderResponse")
	proto.RegisterType((*MsgCreateSentPurchaseorder)(nil), "stateset.core.purchaseorder.MsgCreateSentPurchaseorder")
	proto.RegisterType((*MsgCreateSentPurchaseorderResponse)(nil), "stateset.core.purchaseorder.MsgCreateSentPurchaseorderResponse")
	proto.RegisterType((*MsgUpdateSentPurchaseorder)(nil), "stateset.core.purchaseorder.MsgUpdateSentPurchaseorder")
	proto.RegisterType((*MsgUpdateSentPurchaseorderResponse)(nil), "stateset.core.purchaseorder.MsgUpdateSentPurchaseorderResponse")
	proto.RegisterType((*MsgDeleteSentPurchaseorder)(nil), "stateset.core.purchaseorder.MsgDeleteSentPurchaseorder")
	proto.RegisterType((*MsgDeleteSentPurchaseorderResponse)(nil), "stateset.core.purchaseorder.MsgDeleteSentPurchaseorderResponse")
	proto.RegisterType((*MsgCreateTimedoutPurchaseorder)(nil), "stateset.core.purchaseorder.MsgCreateTimedoutPurchaseorder")
	proto.RegisterType((*MsgCreateTimedoutPurchaseorderResponse)(nil), "stateset.core.purchaseorder.MsgCreateTimedoutPurchaseorderResponse")
	proto.RegisterType((*MsgUpdateTimedoutPurchaseorder)(nil), "stateset.core.purchaseorder.MsgUpdateTimedoutPurchaseorder")
	proto.RegisterType((*MsgUpdateTimedoutPurchaseorderResponse)(nil), "stateset.core.purchaseorder.MsgUpdateTimedoutPurchaseorderResponse")
	proto.RegisterType((*MsgDeleteTimedoutPurchaseorder)(nil), "stateset.core.purchaseorder.MsgDeleteTimedoutPurchaseorder")
	proto.RegisterType((*MsgDeleteTimedoutPurchaseorderResponse)(nil), "stateset.core.purchaseorder.MsgDeleteTimedoutPurchaseorderResponse")
	proto.RegisterType((*MsgRequestPurchaseorder)(nil), "stateset.core.purchaseorder.MsgRequestPurchaseorder")
	proto.RegisterType((*MsgRequestPurchaseorderResponse)(nil), "stateset.core.purchaseorder.MsgRequestPurchaseorderResponse")
}

func init() { proto.RegisterFile("purchaseorder/tx.proto", fileDescriptor_73a0860f861fbe74) }

var fileDescriptor_73a0860f861fbe74 = []byte{
	// 653 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x96, 0x5f, 0x6b, 0xd3, 0x50,
	0x18, 0xc6, 0x7b, 0xda, 0xad, 0xa3, 0xaf, 0x20, 0x23, 0xce, 0x2e, 0x64, 0x12, 0x6b, 0x90, 0x51,
	0xbc, 0x48, 0xc1, 0x4d, 0x14, 0xaa, 0x08, 0xeb, 0x18, 0x22, 0x14, 0xa4, 0xea, 0x8d, 0x17, 0x4a,
	0x9a, 0x1c, 0xda, 0x40, 0x9b, 0xc4, 0x73, 0x12, 0x98, 0x9f, 0x40, 0x10, 0x04, 0xc1, 0x0f, 0xe0,
	0x07, 0xf1, 0x0b, 0x78, 0xb9, 0x4b, 0x2f, 0xb5, 0xfd, 0x22, 0x92, 0x93, 0x3f, 0xae, 0xe5, 0x9c,
	0x9c, 0x2c, 0xdd, 0xdd, 0x4e, 0x76, 0xde, 0xe7, 0xf9, 0xf5, 0x7d, 0xc3, 0xf3, 0x06, 0xda, 0x41,
	0x44, 0xec, 0xa9, 0x45, 0xb1, 0x4f, 0x1c, 0x4c, 0x7a, 0xe1, 0xb9, 0x19, 0x10, 0x3f, 0xf4, 0x95,
	0x03, 0x1a, 0x5a, 0x21, 0xa6, 0x38, 0x34, 0x6d, 0x9f, 0x60, 0x73, 0xe5, 0x96, 0x76, 0xb8, 0x5a,
	0x44, 0xb1, 0x17, 0x7e, 0x58, 0x79, 0x94, 0x88, 0x68, 0x0f, 0xd6, 0xc4, 0xdd, 0x39, 0x76, 0xfc,
	0x88, 0x7b, 0xd7, 0x18, 0xc0, 0xfe, 0x90, 0x4e, 0xce, 0x5c, 0xcf, 0xf2, 0x6c, 0xfc, 0xea, 0xf2,
	0x05, 0x45, 0x85, 0x1d, 0x9b, 0x60, 0x2b, 0xf4, 0x89, 0x8a, 0x3a, 0xa8, 0xdb, 0x1a, 0x65, 0x47,
	0xe5, 0x26, 0xd4, 0x5d, 0x47, 0xad, 0x77, 0x50, 0x77, 0x6b, 0x54, 0x77, 0x1d, 0xe3, 0x1e, 0xdc,
	0x15, 0x88, 0x8c, 0x30, 0x0d, 0x7c, 0x8f, 0x62, 0xe3, 0x04, 0xda, 0x43, 0x3a, 0x19, 0xc4, 0x17,
	0x66, 0x55, 0x6d, 0x3a, 0xa0, 0xf3, 0x35, 0x72, 0x97, 0x53, 0x50, 0xe3, 0x1b, 0xfe, 0x3c, 0x98,
	0xe1, 0xb0, 0xf2, 0xcf, 0x31, 0xa0, 0x23, 0x52, 0xc9, 0x9d, 0xde, 0x83, 0x16, 0xdf, 0x89, 0x15,
	0xf0, 0x6b, 0xec, 0x85, 0x65, 0xbd, 0x76, 0xa1, 0xe1, 0xa4, 0x66, 0xad, 0x51, 0xfc, 0xa7, 0xb2,
	0x07, 0xdb, 0xf6, 0xd4, 0x72, 0x3d, 0xb5, 0xc1, 0x9e, 0x25, 0x07, 0xe3, 0x18, 0x0c, 0xb1, 0x7e,
	0x46, 0x91, 0x92, 0xa3, 0x9c, 0xdc, 0x63, 0x54, 0x6f, 0x03, 0xe7, 0x8a, 0x54, 0x6b, 0x1d, 0xc8,
	0x28, 0x1b, 0x1c, 0xca, 0xad, 0xcb, 0x94, 0xf7, 0x19, 0xa5, 0xc0, 0x2f, 0xef, 0xd5, 0x19, 0xa3,
	0x3a, 0xc5, 0x71, 0x37, 0x37, 0xa0, 0x4a, 0xdd, 0x04, 0x3a, 0xb9, 0xdb, 0x38, 0x79, 0x4b, 0x58,
	0xe7, 0xde, 0xa4, 0xaf, 0xfe, 0x75, 0x4f, 0xe7, 0x09, 0x1c, 0x16, 0x7b, 0x08, 0x27, 0x44, 0x18,
	0x5d, 0xd2, 0xb1, 0xab, 0xd2, 0x55, 0x9d, 0x52, 0x97, 0xd1, 0x16, 0x78, 0xe6, 0xbd, 0x7b, 0xc9,
	0xe8, 0x92, 0x0e, 0x6f, 0x48, 0x97, 0xba, 0x16, 0x68, 0xe5, 0xae, 0x3f, 0x11, 0x0b, 0xa1, 0x11,
	0xfe, 0x18, 0x61, 0xba, 0xc1, 0xac, 0x76, 0xa1, 0x11, 0x11, 0x37, 0xeb, 0x47, 0x44, 0x5c, 0xa5,
	0x0d, 0x4d, 0x6b, 0xee, 0x47, 0x5e, 0x98, 0x36, 0x24, 0x3d, 0xc5, 0x7d, 0x62, 0x41, 0xab, 0x6e,
	0x27, 0x7d, 0x62, 0x07, 0xe5, 0x0e, 0xb4, 0xb2, 0x88, 0x24, 0x6a, 0x93, 0xfd, 0xe7, 0xff, 0x83,
	0x58, 0x8b, 0xe2, 0xd9, 0x0c, 0x13, 0x75, 0x27, 0xd1, 0x4a, 0x4e, 0x69, 0xf8, 0xf1, 0xe0, 0xb3,
	0x1f, 0xf8, 0xf0, 0xef, 0x0d, 0x68, 0x0c, 0xe9, 0x44, 0xf9, 0x82, 0x60, 0x8f, 0x1b, 0xb5, 0xc7,
	0x66, 0x41, 0xee, 0x9b, 0x82, 0x6c, 0xd5, 0x9e, 0x56, 0xa9, 0xca, 0xdf, 0xcc, 0xcf, 0x08, 0x6e,
	0xf1, 0xf2, 0xf8, 0x48, 0xa6, 0xca, 0x29, 0xd2, 0xfa, 0x15, 0x8a, 0x72, 0x92, 0xaf, 0x08, 0x6e,
	0xf3, 0x33, 0xfb, 0x91, 0x54, 0x96, 0x57, 0xa6, 0x3d, 0xab, 0x54, 0x96, 0xf3, 0x7c, 0x47, 0xb0,
	0x2f, 0x4a, 0xf6, 0xc7, 0x52, 0x69, 0x7e, 0xa1, 0xf6, 0xbc, 0x62, 0xe1, 0x0a, 0x95, 0x28, 0xd9,
	0xa5, 0x54, 0x82, 0x42, 0x39, 0x95, 0x24, 0xdb, 0x19, 0x95, 0x28, 0xd9, 0xa5, 0x54, 0x82, 0x42,
	0x39, 0x95, 0x64, 0x07, 0x28, 0x3f, 0x10, 0x1c, 0x14, 0x6d, 0x80, 0x7e, 0xb9, 0x61, 0x70, 0x8b,
	0xb5, 0xc1, 0x06, 0xc5, 0x2b, 0x84, 0x45, 0x5b, 0xa0, 0x5f, 0x6e, 0x30, 0x15, 0x09, 0x4b, 0xec,
	0x02, 0x46, 0x58, 0xb4, 0x09, 0xfa, 0xe5, 0x86, 0x54, 0x91, 0xb0, 0xc4, 0xde, 0x60, 0x71, 0xca,
	0x5d, 0x1a, 0xd2, 0x38, 0xe5, 0x55, 0xc9, 0xe3, 0xb4, 0x28, 0xe3, 0x4f, 0x5e, 0xfc, 0x5a, 0xe8,
	0xe8, 0x62, 0xa1, 0xa3, 0x3f, 0x0b, 0x1d, 0x7d, 0x5b, 0xea, 0xb5, 0x8b, 0xa5, 0x5e, 0xfb, 0xbd,
	0xd4, 0x6b, 0xef, 0xcc, 0x89, 0x1b, 0x4e, 0xa3, 0xb1, 0x69, 0xfb, 0xf3, 0x5e, 0xe6, 0xd0, 0x8b,
	0x1d, 0x7a, 0xe7, 0xbd, 0xb5, 0x2f, 0xf5, 0x4f, 0x01, 0xa6, 0xe3, 0x26, 0xfb, 0x32, 0x3f, 0xfa,
	0x17, 0x00, 0x00, 0xff, 0xff, 0x34, 0xc5, 0xc9, 0xd8, 0x24, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	FinancePurchaseorder(ctx context.Context, in *MsgFinancePurchaseorder, opts ...grpc.CallOption) (*MsgFinancePurchaseorderResponse, error)
	CancelPurchaseorder(ctx context.Context, in *MsgCancelPurchaseorder, opts ...grpc.CallOption) (*MsgCancelPurchaseorderResponse, error)
	CompletePurchaseorder(ctx context.Context, in *MsgCompletePurchaseorder, opts ...grpc.CallOption) (*MsgCompletePurchaseorderResponse, error)
	CreateSentPurchaseorder(ctx context.Context, in *MsgCreateSentPurchaseorder, opts ...grpc.CallOption) (*MsgCreateSentPurchaseorderResponse, error)
	UpdateSentPurchaseorder(ctx context.Context, in *MsgUpdateSentPurchaseorder, opts ...grpc.CallOption) (*MsgUpdateSentPurchaseorderResponse, error)
	DeleteSentPurchaseorder(ctx context.Context, in *MsgDeleteSentPurchaseorder, opts ...grpc.CallOption) (*MsgDeleteSentPurchaseorderResponse, error)
	CreateTimedoutPurchaseorder(ctx context.Context, in *MsgCreateTimedoutPurchaseorder, opts ...grpc.CallOption) (*MsgCreateTimedoutPurchaseorderResponse, error)
	UpdateTimedoutPurchaseorder(ctx context.Context, in *MsgUpdateTimedoutPurchaseorder, opts ...grpc.CallOption) (*MsgUpdateTimedoutPurchaseorderResponse, error)
	DeleteTimedoutPurchaseorder(ctx context.Context, in *MsgDeleteTimedoutPurchaseorder, opts ...grpc.CallOption) (*MsgDeleteTimedoutPurchaseorderResponse, error)
	RequestPurchaseorder(ctx context.Context, in *MsgRequestPurchaseorder, opts ...grpc.CallOption) (*MsgRequestPurchaseorderResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) FinancePurchaseorder(ctx context.Context, in *MsgFinancePurchaseorder, opts ...grpc.CallOption) (*MsgFinancePurchaseorderResponse, error) {
	out := new(MsgFinancePurchaseorderResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.purchaseorder.Msg/FinancePurchaseorder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CancelPurchaseorder(ctx context.Context, in *MsgCancelPurchaseorder, opts ...grpc.CallOption) (*MsgCancelPurchaseorderResponse, error) {
	out := new(MsgCancelPurchaseorderResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.purchaseorder.Msg/CancelPurchaseorder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CompletePurchaseorder(ctx context.Context, in *MsgCompletePurchaseorder, opts ...grpc.CallOption) (*MsgCompletePurchaseorderResponse, error) {
	out := new(MsgCompletePurchaseorderResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.purchaseorder.Msg/CompletePurchaseorder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateSentPurchaseorder(ctx context.Context, in *MsgCreateSentPurchaseorder, opts ...grpc.CallOption) (*MsgCreateSentPurchaseorderResponse, error) {
	out := new(MsgCreateSentPurchaseorderResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.purchaseorder.Msg/CreateSentPurchaseorder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateSentPurchaseorder(ctx context.Context, in *MsgUpdateSentPurchaseorder, opts ...grpc.CallOption) (*MsgUpdateSentPurchaseorderResponse, error) {
	out := new(MsgUpdateSentPurchaseorderResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.purchaseorder.Msg/UpdateSentPurchaseorder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteSentPurchaseorder(ctx context.Context, in *MsgDeleteSentPurchaseorder, opts ...grpc.CallOption) (*MsgDeleteSentPurchaseorderResponse, error) {
	out := new(MsgDeleteSentPurchaseorderResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.purchaseorder.Msg/DeleteSentPurchaseorder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateTimedoutPurchaseorder(ctx context.Context, in *MsgCreateTimedoutPurchaseorder, opts ...grpc.CallOption) (*MsgCreateTimedoutPurchaseorderResponse, error) {
	out := new(MsgCreateTimedoutPurchaseorderResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.purchaseorder.Msg/CreateTimedoutPurchaseorder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateTimedoutPurchaseorder(ctx context.Context, in *MsgUpdateTimedoutPurchaseorder, opts ...grpc.CallOption) (*MsgUpdateTimedoutPurchaseorderResponse, error) {
	out := new(MsgUpdateTimedoutPurchaseorderResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.purchaseorder.Msg/UpdateTimedoutPurchaseorder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteTimedoutPurchaseorder(ctx context.Context, in *MsgDeleteTimedoutPurchaseorder, opts ...grpc.CallOption) (*MsgDeleteTimedoutPurchaseorderResponse, error) {
	out := new(MsgDeleteTimedoutPurchaseorderResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.purchaseorder.Msg/DeleteTimedoutPurchaseorder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RequestPurchaseorder(ctx context.Context, in *MsgRequestPurchaseorder, opts ...grpc.CallOption) (*MsgRequestPurchaseorderResponse, error) {
	out := new(MsgRequestPurchaseorderResponse)
	err := c.cc.Invoke(ctx, "/stateset.core.purchaseorder.Msg/RequestPurchaseorder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	FinancePurchaseorder(context.Context, *MsgFinancePurchaseorder) (*MsgFinancePurchaseorderResponse, error)
	CancelPurchaseorder(context.Context, *MsgCancelPurchaseorder) (*MsgCancelPurchaseorderResponse, error)
	CompletePurchaseorder(context.Context, *MsgCompletePurchaseorder) (*MsgCompletePurchaseorderResponse, error)
	CreateSentPurchaseorder(context.Context, *MsgCreateSentPurchaseorder) (*MsgCreateSentPurchaseorderResponse, error)
	UpdateSentPurchaseorder(context.Context, *MsgUpdateSentPurchaseorder) (*MsgUpdateSentPurchaseorderResponse, error)
	DeleteSentPurchaseorder(context.Context, *MsgDeleteSentPurchaseorder) (*MsgDeleteSentPurchaseorderResponse, error)
	CreateTimedoutPurchaseorder(context.Context, *MsgCreateTimedoutPurchaseorder) (*MsgCreateTimedoutPurchaseorderResponse, error)
	UpdateTimedoutPurchaseorder(context.Context, *MsgUpdateTimedoutPurchaseorder) (*MsgUpdateTimedoutPurchaseorderResponse, error)
	DeleteTimedoutPurchaseorder(context.Context, *MsgDeleteTimedoutPurchaseorder) (*MsgDeleteTimedoutPurchaseorderResponse, error)
	RequestPurchaseorder(context.Context, *MsgRequestPurchaseorder) (*MsgRequestPurchaseorderResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) FinancePurchaseorder(ctx context.Context, req *MsgFinancePurchaseorder) (*MsgFinancePurchaseorderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FinancePurchaseorder not implemented")
}
func (*UnimplementedMsgServer) CancelPurchaseorder(ctx context.Context, req *MsgCancelPurchaseorder) (*MsgCancelPurchaseorderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelPurchaseorder not implemented")
}
func (*UnimplementedMsgServer) CompletePurchaseorder(ctx context.Context, req *MsgCompletePurchaseorder) (*MsgCompletePurchaseorderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompletePurchaseorder not implemented")
}
func (*UnimplementedMsgServer) CreateSentPurchaseorder(ctx context.Context, req *MsgCreateSentPurchaseorder) (*MsgCreateSentPurchaseorderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSentPurchaseorder not implemented")
}
func (*UnimplementedMsgServer) UpdateSentPurchaseorder(ctx context.Context, req *MsgUpdateSentPurchaseorder) (*MsgUpdateSentPurchaseorderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSentPurchaseorder not implemented")
}
func (*UnimplementedMsgServer) DeleteSentPurchaseorder(ctx context.Context, req *MsgDeleteSentPurchaseorder) (*MsgDeleteSentPurchaseorderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSentPurchaseorder not implemented")
}
func (*UnimplementedMsgServer) CreateTimedoutPurchaseorder(ctx context.Context, req *MsgCreateTimedoutPurchaseorder) (*MsgCreateTimedoutPurchaseorderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTimedoutPurchaseorder not implemented")
}
func (*UnimplementedMsgServer) UpdateTimedoutPurchaseorder(ctx context.Context, req *MsgUpdateTimedoutPurchaseorder) (*MsgUpdateTimedoutPurchaseorderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTimedoutPurchaseorder not implemented")
}
func (*UnimplementedMsgServer) DeleteTimedoutPurchaseorder(ctx context.Context, req *MsgDeleteTimedoutPurchaseorder) (*MsgDeleteTimedoutPurchaseorderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTimedoutPurchaseorder not implemented")
}
func (*UnimplementedMsgServer) RequestPurchaseorder(ctx context.Context, req *MsgRequestPurchaseorder) (*MsgRequestPurchaseorderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestPurchaseorder not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_FinancePurchaseorder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgFinancePurchaseorder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).FinancePurchaseorder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.purchaseorder.Msg/FinancePurchaseorder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).FinancePurchaseorder(ctx, req.(*MsgFinancePurchaseorder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CancelPurchaseorder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCancelPurchaseorder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CancelPurchaseorder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.purchaseorder.Msg/CancelPurchaseorder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CancelPurchaseorder(ctx, req.(*MsgCancelPurchaseorder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CompletePurchaseorder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCompletePurchaseorder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CompletePurchaseorder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.purchaseorder.Msg/CompletePurchaseorder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CompletePurchaseorder(ctx, req.(*MsgCompletePurchaseorder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateSentPurchaseorder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSentPurchaseorder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSentPurchaseorder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.purchaseorder.Msg/CreateSentPurchaseorder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSentPurchaseorder(ctx, req.(*MsgCreateSentPurchaseorder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateSentPurchaseorder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateSentPurchaseorder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateSentPurchaseorder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.purchaseorder.Msg/UpdateSentPurchaseorder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateSentPurchaseorder(ctx, req.(*MsgUpdateSentPurchaseorder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteSentPurchaseorder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteSentPurchaseorder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteSentPurchaseorder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.purchaseorder.Msg/DeleteSentPurchaseorder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteSentPurchaseorder(ctx, req.(*MsgDeleteSentPurchaseorder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateTimedoutPurchaseorder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTimedoutPurchaseorder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTimedoutPurchaseorder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.purchaseorder.Msg/CreateTimedoutPurchaseorder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTimedoutPurchaseorder(ctx, req.(*MsgCreateTimedoutPurchaseorder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateTimedoutPurchaseorder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateTimedoutPurchaseorder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateTimedoutPurchaseorder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.purchaseorder.Msg/UpdateTimedoutPurchaseorder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateTimedoutPurchaseorder(ctx, req.(*MsgUpdateTimedoutPurchaseorder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteTimedoutPurchaseorder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteTimedoutPurchaseorder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteTimedoutPurchaseorder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.purchaseorder.Msg/DeleteTimedoutPurchaseorder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteTimedoutPurchaseorder(ctx, req.(*MsgDeleteTimedoutPurchaseorder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RequestPurchaseorder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRequestPurchaseorder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RequestPurchaseorder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stateset.core.purchaseorder.Msg/RequestPurchaseorder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RequestPurchaseorder(ctx, req.(*MsgRequestPurchaseorder))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stateset.core.purchaseorder.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FinancePurchaseorder",
			Handler:    _Msg_FinancePurchaseorder_Handler,
		},
		{
			MethodName: "CancelPurchaseorder",
			Handler:    _Msg_CancelPurchaseorder_Handler,
		},
		{
			MethodName: "CompletePurchaseorder",
			Handler:    _Msg_CompletePurchaseorder_Handler,
		},
		{
			MethodName: "CreateSentPurchaseorder",
			Handler:    _Msg_CreateSentPurchaseorder_Handler,
		},
		{
			MethodName: "UpdateSentPurchaseorder",
			Handler:    _Msg_UpdateSentPurchaseorder_Handler,
		},
		{
			MethodName: "DeleteSentPurchaseorder",
			Handler:    _Msg_DeleteSentPurchaseorder_Handler,
		},
		{
			MethodName: "CreateTimedoutPurchaseorder",
			Handler:    _Msg_CreateTimedoutPurchaseorder_Handler,
		},
		{
			MethodName: "UpdateTimedoutPurchaseorder",
			Handler:    _Msg_UpdateTimedoutPurchaseorder_Handler,
		},
		{
			MethodName: "DeleteTimedoutPurchaseorder",
			Handler:    _Msg_DeleteTimedoutPurchaseorder_Handler,
		},
		{
			MethodName: "RequestPurchaseorder",
			Handler:    _Msg_RequestPurchaseorder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "purchaseorder/tx.proto",
}

func (m *MsgFinancePurchaseorder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFinancePurchaseorder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFinancePurchaseorder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgFinancePurchaseorderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFinancePurchaseorderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFinancePurchaseorderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCancelPurchaseorder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCancelPurchaseorder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCancelPurchaseorder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCancelPurchaseorderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCancelPurchaseorderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCancelPurchaseorderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCompletePurchaseorder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCompletePurchaseorder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCompletePurchaseorder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCompletePurchaseorderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCompletePurchaseorderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCompletePurchaseorderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateSentPurchaseorder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSentPurchaseorder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSentPurchaseorder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Chain) > 0 {
		i -= len(m.Chain)
		copy(dAtA[i:], m.Chain)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Chain)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSentPurchaseorderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSentPurchaseorderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSentPurchaseorderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSentPurchaseorder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSentPurchaseorder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSentPurchaseorder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Chain) > 0 {
		i -= len(m.Chain)
		copy(dAtA[i:], m.Chain)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Chain)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSentPurchaseorderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSentPurchaseorderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSentPurchaseorderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSentPurchaseorder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSentPurchaseorder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSentPurchaseorder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteSentPurchaseorderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteSentPurchaseorderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteSentPurchaseorderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateTimedoutPurchaseorder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTimedoutPurchaseorder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTimedoutPurchaseorder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Chain) > 0 {
		i -= len(m.Chain)
		copy(dAtA[i:], m.Chain)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Chain)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTimedoutPurchaseorderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTimedoutPurchaseorderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTimedoutPurchaseorderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTimedoutPurchaseorder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTimedoutPurchaseorder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTimedoutPurchaseorder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Chain) > 0 {
		i -= len(m.Chain)
		copy(dAtA[i:], m.Chain)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Chain)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTimedoutPurchaseorderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTimedoutPurchaseorderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTimedoutPurchaseorderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTimedoutPurchaseorder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTimedoutPurchaseorder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTimedoutPurchaseorder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTimedoutPurchaseorderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTimedoutPurchaseorderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTimedoutPurchaseorderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRequestPurchaseorder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRequestPurchaseorder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRequestPurchaseorder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Seller) > 0 {
		i -= len(m.Seller)
		copy(dAtA[i:], m.Seller)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Seller)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Purchaser) > 0 {
		i -= len(m.Purchaser)
		copy(dAtA[i:], m.Purchaser)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Purchaser)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.State) > 0 {
		i -= len(m.State)
		copy(dAtA[i:], m.State)
		i = encodeVarintTx(dAtA, i, uint64(len(m.State)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Amount) > 0 {
		i -= len(m.Amount)
		copy(dAtA[i:], m.Amount)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Amount)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Uri) > 0 {
		i -= len(m.Uri)
		copy(dAtA[i:], m.Uri)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Uri)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Did) > 0 {
		i -= len(m.Did)
		copy(dAtA[i:], m.Did)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Did)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRequestPurchaseorderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRequestPurchaseorderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRequestPurchaseorderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgFinancePurchaseorder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgFinancePurchaseorderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCancelPurchaseorder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgCancelPurchaseorderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCompletePurchaseorder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgCompletePurchaseorderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateSentPurchaseorder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Chain)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateSentPurchaseorderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateSentPurchaseorder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Chain)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateSentPurchaseorderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteSentPurchaseorder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteSentPurchaseorderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateTimedoutPurchaseorder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Chain)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTimedoutPurchaseorderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateTimedoutPurchaseorder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Chain)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateTimedoutPurchaseorderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteTimedoutPurchaseorder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteTimedoutPurchaseorderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRequestPurchaseorder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Did)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Uri)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Amount)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Purchaser)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Seller)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRequestPurchaseorderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgFinancePurchaseorder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFinancePurchaseorder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFinancePurchaseorder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFinancePurchaseorderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFinancePurchaseorderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFinancePurchaseorderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCancelPurchaseorder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCancelPurchaseorder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCancelPurchaseorder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCancelPurchaseorderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCancelPurchaseorderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCancelPurchaseorderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCompletePurchaseorder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCompletePurchaseorder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCompletePurchaseorder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCompletePurchaseorderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCompletePurchaseorderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCompletePurchaseorderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSentPurchaseorder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSentPurchaseorder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSentPurchaseorder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Chain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSentPurchaseorderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSentPurchaseorderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSentPurchaseorderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSentPurchaseorder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSentPurchaseorder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSentPurchaseorder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Chain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSentPurchaseorderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSentPurchaseorderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSentPurchaseorderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSentPurchaseorder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSentPurchaseorder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSentPurchaseorder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteSentPurchaseorderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteSentPurchaseorderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteSentPurchaseorderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTimedoutPurchaseorder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTimedoutPurchaseorder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTimedoutPurchaseorder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Chain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTimedoutPurchaseorderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTimedoutPurchaseorderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTimedoutPurchaseorderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTimedoutPurchaseorder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTimedoutPurchaseorder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTimedoutPurchaseorder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Chain = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTimedoutPurchaseorderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTimedoutPurchaseorderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTimedoutPurchaseorderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTimedoutPurchaseorder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTimedoutPurchaseorder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTimedoutPurchaseorder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTimedoutPurchaseorderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTimedoutPurchaseorderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTimedoutPurchaseorderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRequestPurchaseorder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRequestPurchaseorder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRequestPurchaseorder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Did", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Did = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uri", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uri = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Purchaser", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Purchaser = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Seller", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Seller = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRequestPurchaseorderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRequestPurchaseorderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRequestPurchaseorderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
